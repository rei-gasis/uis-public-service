package xxup.oracle.apps.per.publicservice.institutional.server;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Types;

import java.util.Arrays;

import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;
import oracle.apps.fnd.framework.server.OAViewRowImpl;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;

import oracle.jbo.Transaction;

import xxup.oracle.apps.per.publicservice.institutional.lov.server.PerPSInstActivitiesVOImpl;
import xxup.oracle.apps.per.publicservice.institutional.lov.server.PerPSInstDeliveryModeVOImpl;
import xxup.oracle.apps.per.publicservice.institutional.server.tr.XxupPerPSInstActTrEOVOImpl;
import xxup.oracle.apps.per.publicservice.institutional.server.tr.XxupPerPSInstAddrTrEOVOImpl;
import xxup.oracle.apps.per.publicservice.institutional.server.tr.XxupPerPSInstBenefOrgTrEOVOImpl;
import xxup.oracle.apps.per.publicservice.institutional.server.tr.XxupPerPSInstBenefTypeTrEOVOImpl;
import xxup.oracle.apps.per.publicservice.institutional.server.tr.XxupPerPSInstCountriesTrEOVOImpl;
import xxup.oracle.apps.per.publicservice.institutional.server.tr.XxupPerPSInstCountriesTrEOVORowImpl;
import xxup.oracle.apps.per.publicservice.institutional.server.tr.XxupPerPSInstDelModeTrEOVOImpl;
import xxup.oracle.apps.per.publicservice.institutional.server.tr.XxupPerPSInstMembersTrEOVOImpl;
import xxup.oracle.apps.per.publicservice.institutional.server.tr.XxupPerPSInstObjCatTrEOVOImpl;
import xxup.oracle.apps.per.publicservice.institutional.server.tr.XxupPerPSInstOfficeTrEOVOImpl;
import xxup.oracle.apps.per.publicservice.institutional.server.tr.XxupPerPSInstOtherMembersTrEOVOImpl;
import xxup.oracle.apps.per.publicservice.institutional.server.tr.XxupPerPSInstPartOrgTrEOVOImpl;
import xxup.oracle.apps.per.publicservice.institutional.server.tr.XxupPerPSInstSubjTrEOVOImpl;
import xxup.oracle.apps.per.publicservice.institutional.server.tr.XxupPerPSInstToaTrEOVOImpl;
import xxup.oracle.apps.per.publicservice.institutional.server.tr.XxupPerPSInstTrEOVOImpl;
import xxup.oracle.apps.per.publicservice.lov.server.PerPSAddressVOImpl;
import xxup.oracle.apps.per.publicservice.lov.server.PerPSBeneficiaryTypeVOImpl;
import xxup.oracle.apps.per.publicservice.lov.server.PerPSCountryVOImpl;
import xxup.oracle.apps.per.publicservice.lov.server.PerPSSubjectAreaInterestVOImpl;
import xxup.oracle.apps.per.publicservice.server.PerPSActionHistoryVOImpl;
import xxup.oracle.apps.per.publicservice.server.XxupPerPSCountriesEOVOImpl;
import xxup.oracle.apps.per.publicservice.server.XxupPerPSTypeOfActivitiesEOVORowImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PSInstitutionalAMImpl extends OAApplicationModuleImpl {
    /**This is the default constructor (do not remove)
     */
    public PSInstitutionalAMImpl() {
    }

    /**Sample main for debugging Business Components code using the tester.
     */
    public static void main(String[] args) { /* package name */
        /* Configuration Name */launchTester("xxup.oracle.apps.per.publicservice.institutional.server", 
                                             "PSInstitutionalAMLocal");
    }

    public void initVOForNewRequest() {
        XxupPerPSInstTrEOVOImpl mainVO = getXxupPerPSInstTrEOVO1();
        mainVO.initNewRecord();


        XxupPerPSInstOfficeTrEOVOImpl officeVO = 
                getXxupPerPSInstOfficeTrEOVO1();
        officeVO.initNewRecord();

        XxupPerPSInstMembersTrEOVOImpl membersVO = 
                getXxupPerPSInstMembersTrEOVO1();
        membersVO.initNewRecord();


        XxupPerPSInstOtherMembersTrEOVOImpl NonUPVO = 
            getXxupPerPSInstOtherMembersTrEOVO1();
        NonUPVO.initNewRecord();


        XxupPerPSInstObjCatTrEOVOImpl objCatVO = 
            getXxupPerPSInstObjCatTrEOVO1();
        objCatVO.initNewRecord();

        XxupPerPSInstBenefOrgTrEOVOImpl benefOrgVO = 
            getXxupPerPSInstBenefOrgTrEOVO1();
        benefOrgVO.initNewRecord();

        XxupPerPSInstAddrTrEOVOImpl addrVO = 
                getXxupPerPSInstAddrTrEOVO1();
        addrVO.initNewRecord();


        XxupPerPSInstPartOrgTrEOVOImpl partnerVO = 
            getXxupPerPSInstPartOrgTrEOVO1();
        partnerVO.initNewRecord();


        XxupPerPSInstCountriesTrEOVOImpl couVO = 
            getXxupPerPSInstCountriesTrEOVO1();
        couVO.initNewRecord();

        XxupPerPSInstToaTrEOVOImpl toaVO =
            getXxupPerPSInstToaTrEOVO1();
        toaVO.initNewRecord();        


        LoadNewSubjectAreaOfInterestInTable();

        LoadNewBenefTypeInTable();

        LoadNewDeliveryModeInTable();

        LoadNewActivitiesInTable();

         try{
             mainVO.reset();
             Row mainRow = mainVO.next();
             mainRow.setAttribute("ConstituentUniversity", "UP System");
             mainRow.setAttribute("ProjectName", "Test");
             mainRow.setAttribute("ProjectLeader", "7170"); //gasis
 //            mainRow.setAttribute("ImplementationStartDate", );
             mainRow.setAttribute("Duration", 5);
             mainRow.setAttribute("ImplementationFrequency", "Weekly");
             mainRow.setAttribute("CostOfParticipation", "2");
             mainRow.setAttribute("UnitOfBeneficiary", "Individual");
             mainRow.setAttribute("NoOfBeneficiary", "5");
            


             officeVO.reset();
             Row officeRow = officeVO.next();
             officeRow.setAttribute("Office", "UPS UP Padayon");


             membersVO.reset();
             Row memRow = membersVO.next();
             memRow.setAttribute("FullName", "Gasis, Mr. Winson Rei Dalida");


             objCatVO.reset();
             Row objCatRow = objCatVO.next();
             objCatRow.setAttribute("ObjectiveCategory", "To create/make/come up");


            toaVO.reset();
            Row toaRow = toaVO.next();
            toaRow.setAttribute("TypeOfActivity", 126251);


             couVO.reset();
             Row couRow = couVO.next();
             couRow.setAttribute("Country", "Ukraine");


         }catch(Exception ex){
             throw new OAException("" + ex.getMessage());
         }
        

    }


    //     public PerPSActionHistoryVOImpl getPerPSActionHistoryVO1(){
    //        return (PerPSActionHistoryVOImpl) findViewObject("PerPSActionHistoryVO1");
    //    }


    /**Container's getter for XxupPerPSInstObjCatEOVO1
     */
    public XxupPerPSInstObjCatEOVOImpl getXxupPerPSInstObjCatEOVO1() {
        return (XxupPerPSInstObjCatEOVOImpl)findViewObject("XxupPerPSInstObjCatEOVO1");
    }

    public void LoadNewActivitiesInTable() {
        XxupPerPSInstActTrEOVOImpl actVO = 
            getXxupPerPSInstActTrEOVO1();
        // actVO.initNewRecord();
            
        actVO.setMaxFetchSize(0);

        if (actVO.getRowCount() < 1) {
            PerPSInstActivitiesVOImpl sourceVO = getPerPSInstActivitiesVO1();
            sourceVO.initRecords();

            for (Row row = sourceVO.first(); row != null; 
                 row = sourceVO.next()) {
                Row destinationRow = actVO.createRow();
                destinationRow.setAttribute("Activity", 
                                            row.getAttribute("Activity"));
                actVO.insertRow(destinationRow);
            }
        }

        //        delModeVO.setOrderByClause("DELIVERY_MODE");

    }

    public void LoadExistActivitiesInTable(String paramItemKey) {

        XxupPerPSInstActTrEOVOImpl actVO = 
            getXxupPerPSInstActTrEOVO1();

        actVO.initTranPS(paramItemKey);

        PerPSInstActivitiesVOImpl sourceVO = getPerPSInstActivitiesVO1();
        sourceVO.initRecords();
        //        sourceVO.executeQuery();

        Integer line = sourceVO.getRowCount();
        Row rowActivity = null;
        Row row = null;


        RowSetIterator rs = actVO.createRowSetIterator(null);
        rs.setRangeStart(0);
        String[] arrExistActivity = new String[rs.getRowCount()];
        rs.reset();


        int ctr = 0;
        while (rs.hasNext()) {
            Row r = rs.next();
            /*Exclude "Others" value*/
            if (r.getAttribute("Attribute1") == null) {
                arrExistActivity[ctr] = r.getAttribute("Activity").toString();
                ctr++;

                //                 System.out.println("exists: " + r.getAttribute("DeliveryMode").toString());
            } else {
                r.remove();
            }
        }


        rs.closeRowSetIterator();


        for (row = (OAViewRowImpl)sourceVO.first(); row != null; 
             row = (OAViewRowImpl)sourceVO.next()) {


            String strActivity = row.getAttribute("Activity").toString();


            if (!Arrays.asList(arrExistActivity).contains(strActivity)) {

                rowActivity = actVO.createRow();
                rowActivity.setAttribute("Activity", 
                                         row.getAttribute("Activity"));
                actVO.insertRow(rowActivity);

            }


        }

    }
    
    public void LoadExistActivitiesInTable(XxupPerPSInstActTrEOVOImpl pTrVO) {

        XxupPerPSInstActTrEOVOImpl actVO = pTrVO;
//        actVO.initTranPS(paramItemKey);

        PerPSInstActivitiesVOImpl sourceVO = getPerPSInstActivitiesVO1();
        sourceVO.initRecords();
        //        sourceVO.executeQuery();

        Integer line = sourceVO.getRowCount();
        Row rowActivity = null;
        Row row = null;


        RowSetIterator rs = actVO.createRowSetIterator(null);
        rs.setRangeStart(0);
        String[] arrExistActivity = new String[rs.getRowCount()];
        rs.reset();


        int ctr = 0;
        while (rs.hasNext()) {
            Row r = rs.next();
//            System.out.println("acctivity: " + r.getAttribute("Activity").toString());
            
            arrExistActivity[ctr] = r.getAttribute("Activity").toString();
//                System.out.println(r.getAttribute("Activity").toString());
                ctr++;
        }

        rs.closeRowSetIterator();


        for (row = (OAViewRowImpl)sourceVO.first(); row != null; 
             row = (OAViewRowImpl)sourceVO.next()) {


            String strActivity = row.getAttribute("Activity").toString();


            if (!Arrays.asList(arrExistActivity).contains(strActivity)) {

                rowActivity = actVO.createRow();
                rowActivity.setAttribute("Activity", 
                                         row.getAttribute("Activity"));
                actVO.insertRow(rowActivity);

            }


        }

    }

    public void LoadNewBenefTypeInTable() {
        XxupPerPSInstBenefTypeTrEOVOImpl benefTypeVO = 
            getXxupPerPSInstBenefTypeTrEOVO1();
//        benefTypeVO.initNewRecord();

        benefTypeVO.setMaxFetchSize(0);

        if (benefTypeVO.getRowCount() < 1) {
            PerPSBeneficiaryTypeVOImpl sourceVO = getPerPSBeneficiaryTypeVO1();
            sourceVO.setWhereClause(null);
            sourceVO.setOrderByClause("TYPE_OF_BENEFICIARY DESC");
            sourceVO.executeQuery();

            for (Row row = sourceVO.first(); row != null; 
                 row = sourceVO.next()) {
                Row destinationRow = benefTypeVO.createRow();
                destinationRow.setAttribute("TypeOfBeneficiary", 
                                            row.getAttribute("TypeOfBeneficiary"));
                benefTypeVO.insertRow(destinationRow);
            }
        }

        benefTypeVO.setOrderByClause("TYPE_OF_BENEFICIARY");

    }


    public void LoadExistBenefTypeInTable(XxupPerPSInstBenefTypeTrEOVOImpl pTrVO) {
        XxupPerPSInstBenefTypeTrEOVOImpl benefTypeVO = pTrVO;
//        benefTypeVO.initTranPS(paramItemKey);


        PerPSBeneficiaryTypeVOImpl sourceVO = getPerPSBeneficiaryTypeVO1();
        sourceVO.executeQuery();

        Integer line = sourceVO.getRowCount();
        Row rowBenefType = null;
        Row row = null;


        RowSetIterator rs = benefTypeVO.createRowSetIterator(null);
        String[] arrExistBenefType = new String[rs.getRowCount()];
        rs.reset();


        int ctr = 0;
        while (rs.hasNext()) {
            Row r = rs.next();
            arrExistBenefType[ctr] = 
                    r.getAttribute("TypeOfBeneficiary").toString();
            ctr++;
        }


        rs.closeRowSetIterator();

        for (row = (OAViewRowImpl)sourceVO.first(); row != null; 
             row = (OAViewRowImpl)sourceVO.next()) {


            String strTypeOfBeneficiary = 
                row.getAttribute("TypeOfBeneficiary").toString();


            if (!Arrays.asList(arrExistBenefType).contains(strTypeOfBeneficiary)) {
                rowBenefType = benefTypeVO.createRow();
                rowBenefType.setAttribute("TypeOfBeneficiary", 
                                          row.getAttribute("TypeOfBeneficiary"));
                benefTypeVO.insertRow(rowBenefType);
            }
            //line = line - 1;
        }

        benefTypeVO.setOrderByClause("TYPE_OF_BENEFICIARY");
        //        benefTypeVO.executeQuery();

    }
    
         public void LoadExistBenefTypeInTable(String paramItemKey) {
             XxupPerPSInstBenefTypeTrEOVOImpl benefTypeVO = 
                 getXxupPerPSInstBenefTypeTrEOVO1();
             benefTypeVO.initTranPS(paramItemKey);


             PerPSBeneficiaryTypeVOImpl sourceVO = getPerPSBeneficiaryTypeVO1();
             sourceVO.executeQuery();

             Integer line = sourceVO.getRowCount();
             Row rowBenefType = null;
             Row row = null;


             RowSetIterator rs = benefTypeVO.createRowSetIterator(null);
             String[] arrExistBenefType = new String[rs.getRowCount()];
             rs.reset();


             int ctr = 0;
             while (rs.hasNext()) {
                 Row r = rs.next();
                 arrExistBenefType[ctr] = 
                         r.getAttribute("TypeOfBeneficiary").toString();
                 ctr++;
             }


             rs.closeRowSetIterator();

             for (row = (OAViewRowImpl)sourceVO.first(); row != null; 
                  row = (OAViewRowImpl)sourceVO.next()) {


                 String strTypeOfBeneficiary = 
                     row.getAttribute("TypeOfBeneficiary").toString();


                 if (!Arrays.asList(arrExistBenefType).contains(strTypeOfBeneficiary)) {
                     rowBenefType = benefTypeVO.createRow();
                     rowBenefType.setAttribute("TypeOfBeneficiary", 
                                               row.getAttribute("TypeOfBeneficiary"));
                     benefTypeVO.insertRow(rowBenefType);
                 }
                 //line = line - 1;
             }

             benefTypeVO.setOrderByClause("TYPE_OF_BENEFICIARY");
             //        benefTypeVO.executeQuery();

         }


    public void LoadNewDeliveryModeInTable() {
        XxupPerPSInstDelModeTrEOVOImpl delModeVO = 
            getXxupPerPSInstDelModeTrEOVO1();
//        delModeVO.initNewRecord();
        delModeVO.setMaxFetchSize(0);
        
        
        if (delModeVO.getRowCount() < 1) {
            PerPSInstDeliveryModeVOImpl sourceVO = 
                getPerPSInstDeliveryModeVO1();
            sourceVO.initRecords();

            for (Row row = sourceVO.first(); row != null; 
                 row = sourceVO.next()) {
                Row destinationRow = delModeVO.createRow();
                destinationRow.setAttribute("DeliveryMode", 
                                            row.getAttribute("DeliveryMode"));
                delModeVO.insertRow(destinationRow);
            }
        }

        delModeVO.setOrderByClause("DELIVERY_MODE");

    }

    public void LoadExistDeliveryModeInTable(String paramItemKey) {

        XxupPerPSInstDelModeTrEOVOImpl delModeVO = 
            getXxupPerPSInstDelModeTrEOVO1();

        delModeVO.initTranPS(paramItemKey);

        PerPSInstDeliveryModeVOImpl sourceVO = getPerPSInstDeliveryModeVO1();
        sourceVO.initRecords();
        //        sourceVO.executeQuery();

        Integer line = sourceVO.getRowCount();
        Row rowDelMode = null;
        Row row = null;


        RowSetIterator rs = delModeVO.createRowSetIterator(null);
        rs.setRangeStart(0);
        String[] arrExistDelMode = new String[rs.getRowCount()];
        rs.reset();


        int ctr = 0;
        while (rs.hasNext()) {
            Row r = rs.next();
            /*Exclude "Others" value*/
            if (r.getAttribute("Attribute1") == null) {
                arrExistDelMode[ctr] = 
                        r.getAttribute("DeliveryMode").toString();
                ctr++;

                //                System.out.println("exists: " + r.getAttribute("DeliveryMode").toString());
            } else {
                r.remove();
            }
        }


        rs.closeRowSetIterator();


        for (row = (OAViewRowImpl)sourceVO.first(); row != null; 
             row = (OAViewRowImpl)sourceVO.next()) {


            String strDeliveryMode = 
                row.getAttribute("DeliveryMode").toString();


            if (!Arrays.asList(arrExistDelMode).contains(strDeliveryMode)) {

                //                System.out.println(strDeliveryMode);

                rowDelMode = delModeVO.createRow();
                rowDelMode.setAttribute("DeliveryMode", 
                                        row.getAttribute("DeliveryMode"));
                delModeVO.insertRow(rowDelMode);

            }


            //line = line - 1;
        }

        //        delModeVO.setOrderByClause("DELIVERY_MODE");
        //        delModeVO.executeQuery();

    }
    
         public void LoadExistDeliveryModeInTable(XxupPerPSInstDelModeTrEOVOImpl pTrVO) {

             XxupPerPSInstDelModeTrEOVOImpl delModeVO = pTrVO;

//             delModeVO.initTranPS(paramItemKey);

             PerPSInstDeliveryModeVOImpl sourceVO = getPerPSInstDeliveryModeVO1();
             sourceVO.initRecords();
             //        sourceVO.executeQuery();

             Integer line = sourceVO.getRowCount();
             Row rowDelMode = null;
             Row row = null;


             RowSetIterator rs = delModeVO.createRowSetIterator(null);
             rs.setRangeStart(0);
             String[] arrExistDelMode = new String[rs.getRowCount()];
             rs.reset();


             int ctr = 0;
             while (rs.hasNext()) {
                 Row r = rs.next();
                 
                 arrExistDelMode[ctr] = 
                    r.getAttribute("DeliveryMode").toString();
                 ctr++;

                     //                System.out.println("exists: " + r.getAttribute("DeliveryMode").toString());
                 
             }


             rs.closeRowSetIterator();


             for (row = (OAViewRowImpl)sourceVO.first(); row != null; 
                  row = (OAViewRowImpl)sourceVO.next()) {


                 String strDeliveryMode = 
                     row.getAttribute("DeliveryMode").toString();


                 if (!Arrays.asList(arrExistDelMode).contains(strDeliveryMode)) {

                     //                System.out.println(strDeliveryMode);

                     rowDelMode = delModeVO.createRow();
                     rowDelMode.setAttribute("DeliveryMode", 
                                             row.getAttribute("DeliveryMode"));
                     delModeVO.insertRow(rowDelMode);

                 }


                 //line = line - 1;
             }

             //        delModeVO.setOrderByClause("DELIVERY_MODE");
             //        delModeVO.executeQuery();

         }

    public void LoadNewSubjectAreaOfInterestInTable() {

        XxupPerPSInstSubjTrEOVOImpl ppssVO = getXxupPerPSInstSubjTrEOVO1();

        ppssVO.setMaxFetchSize(0);
        // ppssVO.initNewRecord();

        //        ppssVO.setMaxFetchSize(0);

        //        ppssVO.executeQuery();

        //
        if (ppssVO.getRowCount() < 1) {
            PerPSSubjectAreaInterestVOImpl ppsaVO = 
                getPerPSSubjectAreaInterestVO1();

            ppsaVO.executeQuery();
            Integer line = ppsaVO.getRowCount();
            Row newRowForSubArea = null;
            Row row = null;

            for (row = (OAViewRowImpl)ppsaVO.first(); row != null; 
                 row = (OAViewRowImpl)ppsaVO.next()) {
                newRowForSubArea = ppssVO.createRow();
                
                // System.out.println(row.getAttribute("SubjectAreaInterestDisplay"));
                newRowForSubArea.setAttribute("SubjectAreaInterest", 
                                              row.getAttribute("SubjectAreaInterestId"));
                newRowForSubArea.setAttribute("Attribute1", 
                                              row.getAttribute("SubjectAreaInterestDisplay"));
                ppssVO.insertRow(newRowForSubArea);
                //line = line - 1;
            }
        }

        ppssVO.setOrderByClause("SUBJECT_AREA_INTEREST");
        ppssVO.executeQuery();

    }


    public void LoadExistSubjectAreaOfInterestTable(String paramItemKey) {

        XxupPerPSInstSubjTrEOVOImpl existVO = getXxupPerPSInstSubjTrEOVO1();

        existVO.initTranPS(paramItemKey);
        // existVO.reset();

        //if (ppssVO.getRowCount() < 1) {
        // PerPSSubjectAreaInterestVOImpl ppsaVO = 
        //     getPerPSSubjectAreaInterestVO1();

        // ppsaVO.executeQuery();
        // Integer line = ppsaVO.getRowCount();
        // Row newRowForSubArea = null;
        // Row row = null;


        // /* 1. create rowset iterator to convert view into array
        //  * 2. loop for each Subject Area LOV and check if the LOV contains the existing subject area
        //  * 3. If yes, do not create the LOV row. Otherwise, create the LOV row
        //  *
        //  * */

         RowSetIterator rs = existVO.createRowSetIterator(null);
//         String[] arrExistSubj = new String[rs.getRowCount()];
         rs.reset();
         
         int ctr = 0;
         while (rs.hasNext()) {
             Row r = rs.next();
             
             String strAttribute5 = r.getAttribute("Attribute5") != null ? r.getAttribute("Attribute5").toString() : "";
             
             // System.out.println(strAttribute5);
             
             //revert the specified others -> 'Others'
             if("Others".equals(strAttribute5))
                r.setAttribute("Attribute1", "Others");
             
         }
         
         
            existVO.setOrderByClause("SUBJECT_AREA_INTEREST");
             // System.out.println(r.getAttribute("Attribute1").toString() + " " +
             //                    r.getAttribute("Selected").toString());
             /*Exclude Others*/

//             String strExistSubjArea = r.getAttribute("Attribute5") != null ? r.getAttribute("Attribute5").toString() : "";
//             
//
//             //added validation if subj area is
//             if (!"Others".equals(strExistSubjArea) && "Y".equals(strExistSelected)){
//                 arrExistSubj[ctr] = 
//                         r.getAttribute("Attribute1").toString();
//                        
                 // System.out.println("Selected:" + r.getAttribute("Attribute1").toString());
//                 ctr++;

        
        
        // int ctr = 0;
        // while (rs.hasNext()) {
        //     Row r = rs.next();

        //     // System.out.println(r.getAttribute("Attribute1").toString() + " " +
        //     //                    r.getAttribute("Selected").toString());
        //     /*Exclude Others*/

        //     String strExistSubjArea = r.getAttribute("Attribute5") != null ? r.getAttribute("Attribute5").toString() : "";
        //     String strExistSelected = r.getAttribute("Selected") != null ? r.getAttribute("Selected").toString() : "";

        //     //added validation if subj area is
        //     if (!"Others".equals(strExistSubjArea) && "Y".equals(strExistSelected)){
        //         arrExistSubj[ctr] = 
        //                 r.getAttribute("Attribute1").toString();
                        
        //         // System.out.println("Selected:" + r.getAttribute("Attribute1").toString());
        //         ctr++;


        // int ctr = 0;
        // while (rs.hasNext()) {
        //     Row r = rs.next();

        //     // System.out.println(r.getAttribute("Attribute1").toString() + " " +
        //     //                    r.getAttribute("Selected").toString());
        //     /*Exclude Others*/

        //     String strExistSubjArea = r.getAttribute("Attribute5") != null ? r.getAttribute("Attribute5").toString() : "";
        //     String strExistSelected = r.getAttribute("Selected") != null ? r.getAttribute("Selected").toString() : "";

        //     //added validation if subj area is
        //     if (!"Others".equals(strExistSubjArea) && "Y".equals(strExistSelected)){
        //         arrExistSubj[ctr] = 
        //                 r.getAttribute("Attribute1").toString();
                        
        //         // System.out.println("Selected:" + r.getAttribute("Attribute1").toString());
        //         ctr++;


        //         System.out.println("Exist list: " + r.getAttribute("Attribute1").toString());


        //     }
        // }


        // rs.closeRowSetIterator();


        // /*Loop through LOV*/
        // for (row = (OAViewRowImpl)ppsaVO.first(); row != null; 
        //      row = (OAViewRowImpl)ppsaVO.next()) {


        //     String subjArea = 
        //         row.getAttribute("SubjectAreaInterestDisplay").toString();
        //     //Set<String> alreadyExist = new HashSet<String>());

        //      System.out.println("Current LOV:" + subjArea);
        //     if (!Arrays.asList(arrExistSubj).contains(subjArea)) {
        //         newRowForSubArea = existVO.createRow();
        //         newRowForSubArea.setAttribute("SubjectAreaInterest", 
        //                                       row.getAttribute("SubjectAreaInterestId"));
        //         newRowForSubArea.setAttribute("Attribute1", 
        //                                       row.getAttribute("SubjectAreaInterestDisplay"));
        //         existVO.insertRow(newRowForSubArea);
                
        //         System.out.println("Added:" + row.getAttribute("SubjectAreaInterestDisplay"));


        //     }


        //     //line = line - 1;
        // }

        // existVO.setOrderByClause("SUBJECT_AREA_INTEREST");

    }

    public void LoadExistSubjectAreaOfInterestTable(XxupPerPSInstSubjTrEOVOImpl pTrVO) {

        XxupPerPSInstSubjTrEOVOImpl existVO = pTrVO;


//        existVO.initExistingPS(paramItemKey);

        //if (ppssVO.getRowCount() < 1) {
        PerPSSubjectAreaInterestVOImpl ppsaVO = 
            getPerPSSubjectAreaInterestVO1();

        ppsaVO.executeQuery();
        Integer line = ppsaVO.getRowCount();
        Row newRowForSubArea = null;
        Row row = null;


        /* 1. create rowset iterator to convert view into array
         * 2. loop for each Subject Area LOV and check if the LOV contains the existing subject area
         * 3. If yes, do not create the LOV row. Otherwise, create the LOV row
         *
         * */

        RowSetIterator rs = existVO.createRowSetIterator(null);
        String[] arrExistSubj = new String[rs.getRowCount()];
        rs.reset();


        int ctr = 0;
        while (rs.hasNext()) {
            Row r = rs.next();
            /*Exclude "Others" value*/
            // if (r.getAttribute("Attribute1") == null) {
                arrExistSubj[ctr] = r.getAttribute("Attribute1").toString();
                ctr++;


            String strAttribute5 = r.getAttribute("Attribute5") != null ? r.getAttribute("Attribute5").toString() : "";
             
             // System.out.println(strAttribute5);
             
             //revert the specified others -> 'Others'
             if("Others".equals(strAttribute5))
                r.setAttribute("Attribute1", "Others");

            // } else {
            //     r.remove();
            // }
        }


        rs.closeRowSetIterator();


        /*Loop through LOV*/
        for (row = (OAViewRowImpl)ppsaVO.first(); row != null; 
             row = (OAViewRowImpl)ppsaVO.next()) {


            String subjArea = 
                row.getAttribute("SubjectAreaInterestDisplay").toString();
            //Set<String> alreadyExist = new HashSet<String>());


            if (!Arrays.asList(arrExistSubj).contains(subjArea)) {
                newRowForSubArea = existVO.createRow();
                                newRowForSubArea.setAttribute("SubjectAreaInterest", 
                                              row.getAttribute("SubjectAreaInterestId"));
                newRowForSubArea.setAttribute("Attribute1", 
                                              row.getAttribute("SubjectAreaInterestDisplay"));
                existVO.insertRow(newRowForSubArea);

            }


            //line = line - 1;
        }

        existVO.setOrderByClause("SUBJECT_AREA_INTEREST");

    }

    public void updatePS(String paramItemKey) {


        try {

            XxupPerPSInstTrEOVOImpl mainVO = getXxupPerPSInstTrEOVO1();
            mainVO.initTranPS(paramItemKey);

            XxupPerPSInstAddrTrEOVOImpl addrVO = getXxupPerPSInstAddrTrEOVO1();
            addrVO.initTranPS(paramItemKey);

            XxupPerPSInstBenefOrgTrEOVOImpl benefOrgVO = 
                getXxupPerPSInstBenefOrgTrEOVO1();
            benefOrgVO.initTranPS(paramItemKey);

            XxupPerPSInstBenefTypeTrEOVOImpl benefTypeVO = 
                getXxupPerPSInstBenefTypeTrEOVO1();
            benefTypeVO.initTranPS(paramItemKey);

            XxupPerPSInstDelModeTrEOVOImpl delModeVO = 
                getXxupPerPSInstDelModeTrEOVO1();
            delModeVO.initTranPS(paramItemKey);

            XxupPerPSInstMembersTrEOVOImpl membersVO = 
                getXxupPerPSInstMembersTrEOVO1();
            membersVO.initTranPS(paramItemKey);

            if(membersVO.getRowCount() < 1){
                membersVO.initNewRecord();
            }

            XxupPerPSInstOtherMembersTrEOVOImpl nonUPVO = 
                getXxupPerPSInstOtherMembersTrEOVO1();
            nonUPVO.initNewRecord();

            if(nonUPVO.getRowCount() < 1){
                nonUPVO.initNewRecord();
            }

            XxupPerPSInstObjCatTrEOVOImpl objCatVO = 
                getXxupPerPSInstObjCatTrEOVO1();
            objCatVO.initTranPS(paramItemKey);

            if(objCatVO.getRowCount() < 1){
                objCatVO.initNewRecord();
            }

            XxupPerPSInstOfficeTrEOVOImpl officeVO = 
                getXxupPerPSInstOfficeTrEOVO1();
            officeVO.initTranPS(paramItemKey);

            if(officeVO.getRowCount() < 1){
                officeVO.initNewRecord();
            }


            XxupPerPSInstPartOrgTrEOVOImpl partnerOrgVO = 
               getXxupPerPSInstPartOrgTrEOVO1();
           partnerOrgVO.initTranPS(paramItemKey);

           if(partnerOrgVO.getRowCount() < 1){
                partnerOrgVO.initNewRecord();
            }


            XxupPerPSInstSubjTrEOVOImpl subjVO = getXxupPerPSInstSubjTrEOVO1();
            subjVO.initTranPS(paramItemKey);
            
            XxupPerPSInstActTrEOVOImpl actVO = getXxupPerPSInstActTrEOVO1();
            actVO.initTranPS(paramItemKey);


            XxupPerPSInstCountriesTrEOVOImpl couVO = 
                getXxupPerPSInstCountriesTrEOVO1();
            couVO.initTranPS(paramItemKey);    

            if(couVO.getRowCount() < 1){
                couVO.initNewRecord();
            }

            
            XxupPerPSInstToaTrEOVOImpl toaVO =
                getXxupPerPSInstToaTrEOVO1();
            toaVO.initTranPS(paramItemKey);  


            if(toaVO.getRowCount() < 1){
                toaVO.initNewRecord();
            }


                
            if (subjVO.getRowCount() < 1) {
                LoadNewSubjectAreaOfInterestInTable();
            } else if (subjVO.getRowCount() >= 1) {
                LoadExistSubjectAreaOfInterestTable(paramItemKey);
            }    


            if (actVO.getRowCount() < 1) {
                LoadNewActivitiesInTable();
            } else if (actVO.getRowCount() >= 1) {
                LoadExistActivitiesInTable(paramItemKey);
            }


            if (delModeVO.getRowCount() < 1) {
                LoadNewDeliveryModeInTable();
            } else if (delModeVO.getRowCount() >= 1) {
                LoadExistDeliveryModeInTable(paramItemKey);
            }

            if (benefTypeVO.getRowCount() < 1) {
                LoadNewBenefTypeInTable();
            } else if (benefTypeVO.getRowCount() >= 1) {
                LoadExistBenefTypeInTable(paramItemKey);
            }


            removeNonMemberVO(paramItemKey);


        } catch (Exception ex) {
            throw OAException.wrapperException(ex);
        }

    }

    public void updateRecord(String pSequenceNo) {
        XxupPerPSInstTrEOVOImpl oldPSVO = getXxupPerPSInstTrEOVO1();
        oldPSVO.initExistingPS(pSequenceNo);


    }

    public void reviewPS(String paramItemKey) {


        try {
            //            System.out.println("ReviewPS " + paramItemKey);

            XxupPerPSInstTrEOVOImpl mainVO = getXxupPerPSInstTrEOVO1();
            mainVO.initTranPS(paramItemKey);


            this.writeDiagnostics(this, "reviewPS:" + paramItemKey, 1);

            mainVO.reset();
            Row row = mainVO.next();

            try{
                this.writeDiagnostics(this, "ProjectLeader:" + row.getAttribute("ProjectLeader").toString(), 1);            
            // this.writeDiagnostics(this, "ProjectLeaderDisplay:" + row.getAttribute("ProjectLeaderDisplay").toString(), 1);            
                this.writeDiagnostics(this, "Unitduration:" + row.getAttribute("DurationUnit").toString(), 1);            
                this.writeDiagnostics(this, "Duration:" + row.getAttribute("Duration").toString(), 1);                
            }catch(Exception ex){
                
            }
            

            XxupPerPSInstAddrTrEOVOImpl addrVO = getXxupPerPSInstAddrTrEOVO1();
            addrVO.initTranPS(paramItemKey);

            XxupPerPSInstBenefOrgTrEOVOImpl benefOrgVO = 
                getXxupPerPSInstBenefOrgTrEOVO1();
            benefOrgVO.initTranPS(paramItemKey);

            XxupPerPSInstBenefTypeTrEOVOImpl benefTypeVO = 
                getXxupPerPSInstBenefTypeTrEOVO1();
            benefTypeVO.initTranPS(paramItemKey);

            XxupPerPSInstDelModeTrEOVOImpl delModeVO = 
                getXxupPerPSInstDelModeTrEOVO1();
            delModeVO.initTranPS(paramItemKey);

            XxupPerPSInstMembersTrEOVOImpl membersVO = 
                getXxupPerPSInstMembersTrEOVO1();
            membersVO.initTranPS(paramItemKey);

            XxupPerPSInstObjCatTrEOVOImpl objCatVO = 
                getXxupPerPSInstObjCatTrEOVO1();
            objCatVO.initTranPS(paramItemKey);

            XxupPerPSInstOfficeTrEOVOImpl officeVO = 
                getXxupPerPSInstOfficeTrEOVO1();
            officeVO.initTranPS(paramItemKey);

           XxupPerPSInstPartOrgTrEOVOImpl partnerOrgVO = 
               getXxupPerPSInstPartOrgTrEOVO1();
           partnerOrgVO.initTranPS(paramItemKey);

            XxupPerPSInstSubjTrEOVOImpl subjVO = getXxupPerPSInstSubjTrEOVO1();
            subjVO.initTranPS(paramItemKey);
            
            XxupPerPSInstActTrEOVOImpl actVO = getXxupPerPSInstActTrEOVO1();
            actVO.initTranPS(paramItemKey);


            XxupPerPSInstCountriesTrEOVOImpl couVO = 
                getXxupPerPSInstCountriesTrEOVO1();
            couVO.initTranPS(paramItemKey);    

            
            XxupPerPSInstToaTrEOVOImpl toaVO =
                getXxupPerPSInstToaTrEOVO1();
            toaVO.initTranPS(paramItemKey);  


            setApproversTable(paramItemKey);
            


            
            

        } catch (Exception ex) {
            throw OAException.wrapperException(ex);
        }
    }

    public String initApprovers(String assignmentId, String sequenceNo, String action) {
        try{
            String strItemKey = "";
            
            Connection conn = getOADBTransaction().getJdbcConnection();
            CallableStatement stmt = conn.prepareCall("{call xxup_ps_inst_wf_pkg.init_approvers(?,?,?,?)}");

            
            stmt.setString(1, assignmentId);
            stmt.setString(2, sequenceNo);
            stmt.setString(3, action);
            stmt.registerOutParameter(4, Types.VARCHAR);
            stmt.execute();

            strItemKey = stmt.getString(4);
            stmt.close();


            return strItemKey;
            
        }catch(Exception ex){
            throw new OAException("Error occured initializing approvers table " + ex);
        }
    }

    public void initWF(String sequenceNo, String itemKey) {
        try{
            
            
            Connection conn = getOADBTransaction().getJdbcConnection();
            CallableStatement stmt = conn.prepareCall("{call xxup_ps_inst_wf_pkg.init_wf(?,?)}");
            
            
            stmt.setString(1, sequenceNo);
            stmt.setString(2, itemKey);
            stmt.execute();
            stmt.close();
            
        }catch(Exception ex){
            throw new OAException("Error occured calling workflow " + ex);
        }
    }

    public void setApproversTable(String paramItemKey) {
        try {

            PerPSActionHistoryVOImpl ahVO = getPerPSActionHistoryVO1();


            ahVO.initApprovers(paramItemKey);

        } catch (Exception ex) {
            OAException.wrapperException(ex);
        }
    }

    public void setAttachments(String paramItemKey) {
        try {

            XxupPerPSInstTrEOVOImpl pshVO = getXxupPerPSInstTrEOVO1();
            pshVO.initTranPS(paramItemKey);


        } catch (Exception ex) {
            OAException.wrapperException(ex);
        }
    }

    public void resubmitPS(String paramItemKey) {
        try {


            Connection conn = getOADBTransaction().getJdbcConnection();
            CallableStatement stmt = 
                conn.prepareCall("{call xxup_ps_inst_wf_pkg.resubmit(?)}");


            stmt.setString(1, paramItemKey);
            stmt.execute();
            stmt.close();

        } catch (Exception ex) {
            throw new OAException("Error occured calling workflow " + ex);
        }
    }

    public void saveDetails() {


        /*Main*/
        XxupPerPSInstTrEOVOImpl mainVo = getXxupPerPSInstTrEOVO1();

        String sequenceNo = 
            mainVo.getCurrentRow().getAttribute("SequenceNo").toString();
        //System.out.println(sequenceNo);

        Row headerRow = (OAViewRowImpl)mainVo.getCurrentRow();


        if (headerRow != null) {

            String itemKey = headerRow.getAttribute("ItemKey").toString();


            /*Obj cat*/
            XxupPerPSInstObjCatTrEOVOImpl ppocVO = getXxupPerPSInstObjCatTrEOVO1();

            

            Integer lineNumber = 1;
            //System.out.println("total count" + lineNumber); 

            for (Row rowi: ppocVO.getAllRowsInRange()) {
                String objCatDisplay = "";
                if (rowi.getAttribute("ObjectiveCategory") != null) {
                    objCatDisplay = 
                            rowi.getAttribute("ObjectiveCategory").toString();
                }


                if (objCatDisplay != "") {
                    rowi.setAttribute("SequenceNo", sequenceNo);
                    rowi.setAttribute("LineNumber", lineNumber);
                    rowi.setAttribute("ItemKey", itemKey);


                    lineNumber += 1;
                } else if (objCatDisplay == "") {
                    rowi.remove();
                }


            }



            lineNumber = 1;

            /*Office*/
            XxupPerPSInstOfficeTrEOVOImpl officeVO = 
                getXxupPerPSInstOfficeTrEOVO1();


            for (Row rowi: officeVO.getAllRowsInRange()) {
                String office = "";
                if (rowi.getAttribute("Office") != null) {
                    office = rowi.getAttribute("Office").toString();
                }


                if (office != "") {
                    rowi.setAttribute("SequenceNo", sequenceNo);
                    rowi.setAttribute("LineNumber", lineNumber);
                    rowi.setAttribute("ItemKey", itemKey);


                    lineNumber += 1;
                } else if (office == "") {
                    rowi.remove();
                }
            }

            //reset counter
            lineNumber = 1;

            /*Members*/
            XxupPerPSInstMembersTrEOVOImpl ppmVO = 
                getXxupPerPSInstMembersTrEOVO1();


            for (Row rowi: ppmVO.getAllRowsInRange()) {
                String member = "";
                if (rowi.getAttribute("FullName") != null) {
                    member = rowi.getAttribute("FullName").toString();
                }


                if (member != "") {
                    rowi.setAttribute("SequenceNo", sequenceNo);
                    rowi.setAttribute("LineNumber", lineNumber);
                    rowi.setAttribute("ItemKey", itemKey);


                    lineNumber += 1;
                } else if (member == "") {
                    rowi.remove();
                }
            }

            /*Append non-up members*/
            XxupPerPSInstOtherMembersTrEOVOImpl otherMembersVO = 
                getXxupPerPSInstOtherMembersTrEOVO1();

            for (Row rowi: otherMembersVO.getAllRowsInRange()) {
                String member = "";
                String position = "";
                String organization = "";
                String projectRole = "";


                if (rowi.getAttribute("FullName") != null) {

                    Row memberRow = ppmVO.createRow();
                    member = rowi.getAttribute("FullName").toString();

                    if (rowi.getAttribute("Position") != null)
                        position = rowi.getAttribute("Position").toString();


                    if (rowi.getAttribute("Organization") != null)
                        organization = 
                                rowi.getAttribute("Organization").toString();

                    if (rowi.getAttribute("ProjectRole") != null)
                        projectRole = 
                                rowi.getAttribute("ProjectRole").toString();


                    memberRow.setAttribute("FullName", member);
                    memberRow.setAttribute("Position", position);
                    memberRow.setAttribute("Organization", organization);
                    memberRow.setAttribute("ProjectRole", projectRole);
                    memberRow.setAttribute("Attribute1", "Non-UP");


                    memberRow.setAttribute("SequenceNo", sequenceNo);
                    memberRow.setAttribute("LineNumber", lineNumber);
                    memberRow.setAttribute("ItemKey", itemKey);
                    ppmVO.insertRow(memberRow);

                    lineNumber += 1;

                } else if (member == "") {
                    rowi.remove();
                }

            }

            lineNumber = 1;


            /*Partner Organization/Institution */
           XxupPerPSInstPartOrgTrEOVOImpl partnerOrgVO = 
               getXxupPerPSInstPartOrgTrEOVO1();


           for (Row rowi: partnerOrgVO.getAllRowsInRange()) {
               String name = "";
               if (rowi.getAttribute("OrganizationName") != null) {
                   name = rowi.getAttribute("OrganizationName").toString();

               }


               if (name != "") {
                   rowi.setAttribute("SequenceNo", sequenceNo);
                   rowi.setAttribute("LineNumber", lineNumber);
                   rowi.setAttribute("ItemKey", itemKey);


                   lineNumber += 1;
               } else if (name == "") {
                   rowi.remove();
               }
           }


            //reset counter
            lineNumber = 1;


            /*Subject area of interest*/

            XxupPerPSInstSubjTrEOVOImpl ppssVO = getXxupPerPSInstSubjTrEOVO1();


            Row selectedRows[] = ppssVO.getFilteredRows("Selected", "Y");
            Row deselectedRows[] = ppssVO.getFilteredRows("Selected", null);


            //            System.out.println("subj area count: " + selectedRows.length);

            //            System.out.println("Selected");

            for (Row rowi: selectedRows) {
                String strSubjArea = "";
                if(rowi.getAttribute("Attribute1") != null){
                    strSubjArea = rowi.getAttribute("Attribute1").toString();    
                }
                if ("Others".equals(strSubjArea)) {
                    rowi.remove();
                }else{
                    String subj = rowi.getAttribute("SubjectAreaInterest").toString();

                //                System.out.println(subj);

                    rowi.setAttribute("SequenceNo", sequenceNo);
                    rowi.setAttribute("LineNumber", lineNumber);
                    rowi.setAttribute("ItemKey", itemKey);

                    lineNumber += 1;
                }

                

            }


            //            System.out.println("not selected");

            for (Row rowi: deselectedRows) {

                if (rowi.getAttribute("Selected") == null) {
                    String subj = 
                        rowi.getAttribute("SubjectAreaInterest").toString();

                    //                    System.out.println(subj);


                    rowi.remove();
                }

            }


            //Append Subj Area Others
            if (headerRow.getAttribute("SubjAreaOthers") != null) {
                String strSubjArea = 
                    headerRow.getAttribute("SubjAreaOthers").toString();
                //                System.out.println("others: " + strDelMode);
                //                if (!"".equals(strDelMode)) {

                if(!"".equals(strSubjArea)){ //dont create record if empty
                    lineNumber += 1;
                    Row othersRow = ppssVO.createRow();


                    othersRow.setAttribute("SequenceNo", sequenceNo);
                    othersRow.setAttribute("Attribute1", strSubjArea);
                    othersRow.setAttribute("LineNumber", lineNumber);
                    othersRow.setAttribute("Selected", "Y");
                    othersRow.setAttribute("Attribute5", "Others");
                    othersRow.setAttribute("ItemKey", itemKey);
                    othersRow.setAttribute("SubjectAreaInterest", 0);

                    ppssVO.insertRow(othersRow);
                }
            }






            //reset counter
            lineNumber = 1;


            /*Activities*/

            XxupPerPSInstActTrEOVOImpl actVO = 
                getXxupPerPSInstActTrEOVO1();


            Row selectedActRows[] = actVO.getFilteredRows("Selected", "Y");
            Row deselectedActRows[] = actVO.getFilteredRows("Selected", null);


            for (Row rowi: selectedActRows) {
                String strActivity = rowi.getAttribute("Activity").toString();
                if ("Others".equals(strActivity)) {
                    rowi.remove();
                } else {
                    rowi.setAttribute("SequenceNo", sequenceNo);
                    rowi.setAttribute("LineNumber", lineNumber);
                    rowi.setAttribute("ItemKey", itemKey);
                    lineNumber += 1;
                }
            }


            //Append others field's value
            if (headerRow.getAttribute("ActivityOthers") != null) {
                String strActivity = 
                    headerRow.getAttribute("ActivityOthers").toString();
                

                lineNumber += 1;
                Row othersRow = actVO.createRow();


                othersRow.setAttribute("SequenceNo", sequenceNo);
                othersRow.setAttribute("Activity", "Others");
                othersRow.setAttribute("LineNumber", lineNumber);
                othersRow.setAttribute("Selected", "Y");
                othersRow.setAttribute("Attribute1", strActivity);
                othersRow.setAttribute("ItemKey", itemKey);

                actVO.insertRow(othersRow);


                //                System.out.println("inserted");
                //                }
            }


            for (Row rowi: actVO.getAllRowsInRange()) {
                if (rowi.getAttribute("Selected") == null) {
                    rowi.remove();
                }
            }


            lineNumber = 1;


            /*DeliveryMode*/

            XxupPerPSInstDelModeTrEOVOImpl delModeVO = 
                getXxupPerPSInstDelModeTrEOVO1();


            Row selectedDMRows[] = delModeVO.getFilteredRows("Selected", "Y");
            Row deselectedDMRows[] = 
                delModeVO.getFilteredRows("Selected", null);


            //            System.out.println("subj area count: " + selectedRows.length);

            for (Row rowi: selectedDMRows) {
                String strDelMode = rowi.getAttribute("DeliveryMode").toString();
                if ("Others".equals(strDelMode)) {
                    rowi.remove();
                } else {
                    rowi.setAttribute("SequenceNo", sequenceNo);
                    rowi.setAttribute("LineNumber", lineNumber);
                    rowi.setAttribute("ItemKey", itemKey);
                    lineNumber += 1;
                }
                
                //                }

            }


            //            String[] testDelMode = {"a", "b", "c"};
            //            
            //            int ctr = 0;
            //            while(ctr < testDelMode.length) {
            //                Row othersRow = delModeVO.createRow();
            //
            //                othersRow.setAttribute("SequenceNo", sequenceNo);
            //                othersRow.setAttribute("DeliveryMode", testDelMode[ctr]);
            //                othersRow.setAttribute("LineNumber", lineNumber);
            //
            //                delModeVO.insertRow(othersRow);
            //                
            //                ctr++;
            //            }


            //Append others field's value
            if (headerRow.getAttribute("DelModeOthers") != null) {
                String strDelMode = 
                    headerRow.getAttribute("DelModeOthers").toString();
                //                System.out.println("others: " + strDelMode);
                //                if (!"".equals(strDelMode)) {

                lineNumber += 1;
                Row othersRow = delModeVO.createRow();


                othersRow.setAttribute("SequenceNo", sequenceNo);
                othersRow.setAttribute("DeliveryMode", "Others");
                othersRow.setAttribute("LineNumber", lineNumber);
                othersRow.setAttribute("Selected", "Y");
                othersRow.setAttribute("Attribute1", strDelMode);
                othersRow.setAttribute("ItemKey", itemKey);

                delModeVO.insertRow(othersRow);


                //                System.out.println("inserted");
                //                }
            }


            for (Row rowi: delModeVO.getAllRowsInRange()) {
                if (rowi.getAttribute("Selected") == null) {
                    rowi.remove();
                }
            }

            lineNumber = 1;

            /*Type of Beneficiary*/

            XxupPerPSInstBenefTypeTrEOVOImpl benefTypeVO = 
                getXxupPerPSInstBenefTypeTrEOVO1();


            Row selectedBTRows[] = 
                benefTypeVO.getFilteredRows("Selected", "Y");
            Row deselectedBTRows[] = 
                benefTypeVO.getFilteredRows("Selected", null);

            for (Row rowi: selectedBTRows) {

                rowi.setAttribute("SequenceNo", sequenceNo);
                rowi.setAttribute("LineNumber", lineNumber);
                rowi.setAttribute("ItemKey", itemKey);

                lineNumber += 1;

            }


            for (Row rowi: benefTypeVO.getAllRowsInRange()) {


                if (rowi.getAttribute("Selected") == null) {
                    rowi.remove();
                }
            }


            lineNumber = 1;


            /*Address*/
            XxupPerPSInstAddrTrEOVOImpl addrVO = getXxupPerPSInstAddrTrEOVO1();


            for (Row rowi: addrVO.getAllRowsInRange()) {
                String address = "";
                if (rowi.getAttribute("Address") != null) {
                    address = rowi.getAttribute("Address").toString();
                }


                if (address != "") {
                    rowi.setAttribute("SequenceNo", sequenceNo);
                    rowi.setAttribute("LineNumber", lineNumber);
                    rowi.setAttribute("ItemKey", itemKey);


                    lineNumber += 1;
                } else if (address == "") {
                    rowi.remove();
                }
            }


            lineNumber = 1;


            /*Beneficiary Organization*/
            XxupPerPSInstBenefOrgTrEOVOImpl benefOrgVO = 
                getXxupPerPSInstBenefOrgTrEOVO1();


            for (Row rowi: benefOrgVO.getAllRowsInRange()) {
                String name = "";
                if (rowi.getAttribute("BeneficiaryOrganization") != null) {
                    name = rowi.getAttribute("BeneficiaryOrganization").toString();
                }


                if (name != "") {
                    rowi.setAttribute("SequenceNo", sequenceNo);
                    rowi.setAttribute("LineNumber", lineNumber);
                    rowi.setAttribute("ItemKey", itemKey);


                    lineNumber += 1;
                } else if (name == "") {
                    rowi.remove();
                }
            }


            lineNumber = 1;

            
            /*Type of Activities*/
            XxupPerPSInstToaTrEOVOImpl toaVO =
                getXxupPerPSInstToaTrEOVO1();
            
            for (Row rowi: toaVO.getAllRowsInRange()) {
                String typeOfActivity = "";
                if (rowi.getAttribute("TypeOfActivity") != null) {
                    typeOfActivity = rowi.getAttribute("TypeOfActivity").toString();
                }
                
                if (typeOfActivity != "") {
                    rowi.setAttribute("SequenceNo", sequenceNo);
                    rowi.setAttribute("LineNumber", lineNumber);
                    rowi.setAttribute("ItemKey", itemKey);


                    lineNumber += 1;
                    
                } else if (typeOfActivity == "") {
                    rowi.remove();
                }
            }



            /*Countries*/
            XxupPerPSInstCountriesTrEOVOImpl couVO =
                getXxupPerPSInstCountriesTrEOVO1();
            
            for (Row rowi: couVO.getAllRowsInRange()) {
                String country = "";
                if (rowi.getAttribute("Country") != null) {
                    country = rowi.getAttribute("Country").toString();
                }
                
                if (country != "") {
                    rowi.setAttribute("SequenceNo", sequenceNo);
                    rowi.setAttribute("LineNumber", lineNumber);
                    rowi.setAttribute("ItemKey", itemKey);

                    lineNumber += 1;
                    
                } else if (country == "") {
                    rowi.remove();
                }
            }


        }

    }

    public void showSummaryVO(String accessLevel) {
       // XxupPerPSInstitutionalEOVOImpl vo = getXxupPerPSInstitutionalEOVO1();
        XxupPerPSInstitutionalEOVOImpl summVo = getXxupPerPSInstitutionalEOVO1();
        
        if (summVo != null) {
            summVo.showSummaryVO(1);
        }

    }

    public void commitTransaction() {
        getTransaction().commit();
    }

    public void rollbackPS() {
        Transaction txn = getTransaction();
        if (txn.isDirty()) {
            txn.rollback();
        }
    }

    /*Procedure to remove Non-UP members from the UP team member list*/

    public void removeNonMemberVO(String paramItemKey) {
        XxupPerPSInstMembersTrEOVOImpl membersVO = 
            getXxupPerPSInstMembersTrEOVO1();
        membersVO.initTranPS(paramItemKey);


        XxupPerPSInstOtherMembersVOImpl othersVO = 
            getXxupPerPSInstOtherMembersVO1();
        othersVO.setMaxFetchSize(0);
        othersVO.executeQuery();


        String fullName = "";
        String isUP = "";

        /*  Loop for each record and check if the member is Non-UP
         *  if yes, remove the Non UP member from the UP group
         * */
        //        for(Row rowi : membersVO.getAllRowsInRange()){
        for (Row rowi = membersVO.first(); rowi != null; 
             rowi = membersVO.next()) {

            if (rowi.getAttribute("FullName") != null) {
                fullName = rowi.getAttribute("FullName").toString();
                //                System.out.println(fullName);
            }

            if (rowi.getAttribute("Attribute1") != null) {
                isUP = rowi.getAttribute("Attribute1").toString();
                //                System.out.println(isUP);

                if ("Non-UP".equals(isUP)) {

                    Row othersRow = othersVO.createRow();

                    if (rowi.getAttribute("FullName") != null)
                        othersRow.setAttribute("FullName", 
                                               rowi.getAttribute("FullName").toString());

                    if (rowi.getAttribute("Position") != null)
                        othersRow.setAttribute("Position", 
                                               rowi.getAttribute("Position").toString());

                    if (rowi.getAttribute("Organization") != null)
                        othersRow.setAttribute("Organization", 
                                               rowi.getAttribute("Organization").toString());

                    if (rowi.getAttribute("ProjectRole") != null)
                        othersRow.setAttribute("ProjectRole", 
                                               rowi.getAttribute("ProjectRole").toString());

                    othersVO.insertRow(othersRow);

                    rowi.remove();
                }
            }

        }


    }

    /*Procedure to return Non-UP members from the UP team member list (used in create PS)*/

    public void returnNonMemberVO() {
        XxupPerPSInstMembersTrEOVOImpl membersVO = 
            getXxupPerPSInstMembersTrEOVO1();
        //        membersVO.initExistingPS();


        //        XxupPerPSInstOtherMembersVOImpl othersVO = getXxupPerPSInstOtherMembersVO1();
        //        othersVO.setMaxFetchSize(0);
        //        othersVO.executeQuery();


        String fullName = "";
        String isUP = "";

        /*  Loop for each record and check if the member is Non-UP
         *  if yes, remove the Non UP member from the UP group
         * */
        //        for(Row rowi : membersVO.getAllRowsInRange()){
        for (Row rowi = membersVO.first(); rowi != null; 
             rowi = membersVO.next()) {


            if (rowi.getAttribute("Attribute1") != null) {
                isUP = rowi.getAttribute("Attribute1").toString();

                if ("Non-UP".equals(isUP)) {
                    rowi.remove();
                }
            }

        }


    }

    public String checkPhilippines(){
        XxupPerPSInstCountriesTrEOVOImpl couVO = getXxupPerPSInstCountriesTrEOVO1();
        
        String result = null;
        if(couVO != null){
            couVO.reset();
            while(couVO.hasNext()){
                XxupPerPSInstCountriesTrEOVORowImpl currRow = (XxupPerPSInstCountriesTrEOVORowImpl) couVO.next();
                
                if(currRow.getAttribute("Country") != null && 
                   "Philippines".equals(currRow.getAttribute("Country").toString())
                ){
                    return "Y";
                }else{
                    return null;
                }

            }
        }
        return result;
    }


    public void initTranRecord(String paramSequenceNo) {
        try{
            /*Start Copy - Header*/
            // System.out.println("paramSequenceNo: " + paramSequenceNo);
            XxupPerPSInstitutionalEOVOImpl mainVO = 
                getXxupPerPSInstitutionalEOVO1();

            mainVO.reset();

            Row mRow = null;
            if(mainVO != null){
                mainVO.initExistingPS(paramSequenceNo);
                
                while(mainVO.hasNext()){
                    XxupPerPSInstitutionalEOVORowImpl currRow = (XxupPerPSInstitutionalEOVORowImpl)
                        mainVO.next();
                        
                    String strSequenceNo = currRow.getAttribute("SequenceNo") != null ? currRow.getAttribute("SequenceNo").toString() : "";
                    String strConstituentUniversity = currRow.getAttribute("ConstituentUniversity") != null ? currRow.getAttribute("ConstituentUniversity").toString() : "";
                    String strProjectName = currRow.getAttribute("ProjectName") != null ? currRow.getAttribute("ProjectName").toString() : "";
                    String strProjectLeaderDisplay = currRow.getAttribute("ProjectLeaderDisplay") != null ? currRow.getAttribute("ProjectLeaderDisplay").toString() : "";
                    String strProjectLeader = currRow.getAttribute("ProjectLeader") != null ? currRow.getAttribute("ProjectLeader").toString() : "";
                    String strImplementationFrequency = currRow.getAttribute("ImplementationFrequency") != null ? currRow.getAttribute("ImplementationFrequency").toString() : "";
                    String strImplementationEndDate = currRow.getAttribute("ImplementationEndDate") != null ? currRow.getAttribute("ImplementationEndDate").toString() : "";
                    String strImplementationStartDate = currRow.getAttribute("ImplementationStartDate") != null ? currRow.getAttribute("ImplementationStartDate").toString() : "";
                    String strStatus = currRow.getAttribute("Status") != null ? currRow.getAttribute("Status").toString() : "";
                    String strFundingAgency = currRow.getAttribute("FundingAgency") != null ? currRow.getAttribute("FundingAgency").toString() : "";
                    String strCostOfParticipation = currRow.getAttribute("CostOfParticipation") != null ? currRow.getAttribute("CostOfParticipation").toString() : "";
                    String strUnitOfBeneficiary = currRow.getAttribute("UnitOfBeneficiary") != null ? currRow.getAttribute("UnitOfBeneficiary").toString() : "";
                    String strNoOfBeneficiary = currRow.getAttribute("NoOfBeneficiary") != null ? currRow.getAttribute("NoOfBeneficiary").toString() : "";
                    String strPostActEvalRating = currRow.getAttribute("PostActEvalRating") != null ? currRow.getAttribute("PostActEvalRating").toString() : "";
                    String strDuration = currRow.getAttribute("Duration") != null ? currRow.getAttribute("Duration").toString() : "";
                    String strDurationUnit = currRow.getAttribute("DurationUnit") != null ? currRow.getAttribute("DurationUnit").toString() : "";
                    String strMaleBenefCount = currRow.getAttribute("MaleBenefCount") != null ? currRow.getAttribute("MaleBenefCount").toString() : "";
                    String strFemaleBenefCount = currRow.getAttribute("FemaleBenefCount") != null ? currRow.getAttribute("FemaleBenefCount").toString() : "";
                    String strRemarks = currRow.getAttribute("Remarks") != null ? currRow.getAttribute("Remarks").toString() : "";
                    String strAttribute1 = currRow.getAttribute("Attribute1") != null ? currRow.getAttribute("Attribute1").toString() : "";
                    String strAttribute2 = currRow.getAttribute("Attribute2") != null ? currRow.getAttribute("Attribute2").toString() : "";
                    String strAttribute3 = currRow.getAttribute("Attribute3") != null ? currRow.getAttribute("Attribute3").toString() : "";
                    String strAttribute4 = currRow.getAttribute("Attribute4") != null ? currRow.getAttribute("Attribute4").toString() : "";
                    String strAttribute5 = currRow.getAttribute("Attribute5") != null ? currRow.getAttribute("Attribute5").toString() : "";
//                    String strRenderOrgRN = currRow.getAttribute("RenderOrgRN") != null ? currRow.getAttribute("RenderOrgRN").toString() : "";
//                    String strRenderDelModeOthers = currRow.getAttribute("RenderDelModeOthers") != null ? currRow.getAttribute("RenderDelModeOthers").toString() : "";
//                    String strRenderAddress = currRow.getAttribute("RenderAddress") != null ? currRow.getAttribute("RenderAddress").toString() : "";
//                    String strRenderActivityOthers = currRow.getAttribute("RenderActivityOthers") != null ? currRow.getAttribute("RenderActivityOthers").toString() : "";
//                    String strRenderSubjAreaOthers = currRow.getAttribute("RenderSubjAreaOthers") != null ? currRow.getAttribute("RenderSubjAreaOthers").toString() : "";
//                    String strDelModeOthers = currRow.getAttribute("DelModeOthers") != null ? currRow.getAttribute("DelModeOthers").toString() : "";
//                    String strActivityOthers = currRow.getAttribute("ActivityOthers") != null ? currRow.getAttribute("ActivityOthers").toString() : "";
//                    String strSubjAreaOthers = currRow.getAttribute("SubjAreaOthers") != null ? currRow.getAttribute("SubjAreaOthers").toString() : "";
                    
                    XxupPerPSInstTrEOVOImpl trVO =
                        getXxupPerPSInstTrEOVO1();

                    
                    trVO.initNewRecord();
                                        
//                    trVO.reset();
                    Row trRow = trVO.getCurrentRow();
//                    trRow.setAttribute("SequenceNo", seqNo);
                    trRow.setAttribute("SequenceNo", strSequenceNo);
                    trRow.setAttribute("ConstituentUniversity", strConstituentUniversity);
                    trRow.setAttribute("ProjectName", strProjectName);
                    trRow.setAttribute("ProjectLeader", strProjectLeader);
                    trRow.setAttribute("ProjectLeaderDisplay", strProjectLeaderDisplay);
                    trRow.setAttribute("ImplementationFrequency", strImplementationFrequency);
                    trRow.setAttribute("ImplementationEndDate", strImplementationEndDate);
                    trRow.setAttribute("ImplementationStartDate", strImplementationStartDate);
                    trRow.setAttribute("Status", strStatus);
                    trRow.setAttribute("FundingAgency", strFundingAgency);
                    trRow.setAttribute("CostOfParticipation", strCostOfParticipation);
                    trRow.setAttribute("UnitOfBeneficiary", strUnitOfBeneficiary);
                    trRow.setAttribute("NoOfBeneficiary", strNoOfBeneficiary);
                    trRow.setAttribute("PostActEvalRating", strPostActEvalRating);
                    trRow.setAttribute("Duration", strDuration);
                    trRow.setAttribute("DurationUnit", strDurationUnit);
                    trRow.setAttribute("MaleBenefCount", strMaleBenefCount);
                    trRow.setAttribute("FemaleBenefCount", strFemaleBenefCount);
                    trRow.setAttribute("Remarks", strRemarks);
                    trRow.setAttribute("Attribute1", strAttribute1);
                    trRow.setAttribute("Attribute2", strAttribute2);
                    trRow.setAttribute("Attribute3", strAttribute3);
                    trRow.setAttribute("Attribute4", strAttribute4);
                    trRow.setAttribute("Attribute5", strAttribute5);
//                    trRow.setAttribute("RenderOrgRN", strRenderOrgRN);
//                    trRow.setAttribute("RenderDelModeOthers", strRenderDelModeOthers);
//                    trRow.setAttribute("RenderAddress", strRenderAddress);
//                    trRow.setAttribute("RenderActivityOthers", strRenderActivityOthers);
//                    trRow.setAttribute("RenderSubjAreaOthers", strRenderSubjAreaOthers);
//                    trRow.setAttribute("DelModeOthers", strDelModeOthers);
//                    trRow.setAttribute("ActivityOthers", strActivityOthers);
//                    trRow.setAttribute("SubjAreaOthers", strSubjAreaOthers);

                     //derive assignment ID from DB
                     String strAssignmentId = "";
                     
                     Connection conn = this.getOADBTransaction().getJdbcConnection();
                     try{
                    // System.out.println(row.getAttribute("PositionId").toString());
                        String Query = "SELECT assignment_id " +
                                   "FROM per_all_assignments_f paaf " +
                                   "WHERE SYSDATE BETWEEN effective_start_date AND effective_end_date " +
                                   "AND person_id = fnd_global.employee_id " +
                                   "AND primary_flag = 'Y'";
    
                        PreparedStatement stmt = conn.prepareStatement(Query);  
                        // stmt.setString(1, strPositionId);
                        // stmt.setString(1, project_id);  
                        for(ResultSet resultset = stmt.executeQuery(); resultset.next();)  
                        {  

                            strAssignmentId = resultset.getString("assignment_id");

                            // System.out.println("assignment_id: " + resultset.getString("assignment_id"));
                        }

                        trRow.setAttribute("AssignmentId", strAssignmentId); //

                    }catch(Exception ex){
                        throw new OAException("Exception" + ex);
                    }


                 }


                 /*Start copy - Activities*/
                 XxupPerPSInstActivitiesEOVOImpl actVO = 
                    getXxupPerPSInstActivitiesEOVO1();   

                actVO.reset();

                XxupPerPSInstActTrEOVOImpl actTrVO =
                    getXxupPerPSInstActTrEOVO1();

                actTrVO.setMaxFetchSize(0);
                actTrVO.executeQuery();

                if(actVO != null){
                    actVO.initExistingPS(paramSequenceNo);
                    
                    while(actVO.hasNext()){
                        XxupPerPSInstActivitiesEOVORowImpl currRow = (XxupPerPSInstActivitiesEOVORowImpl)
                            actVO.next();

                        String strSequenceNo = currRow.getAttribute("SequenceNo")  != null ? currRow.getAttribute("SequenceNo").toString() : "";
                        String strActivity = currRow.getAttribute("Activity") != null ? currRow.getAttribute("Activity").toString() : "";
                        String strSelected = currRow.getAttribute("Selected") != null  ? currRow.getAttribute("Selected").toString() : "";
                        String strAttribute1 = currRow.getAttribute("Attribute1")  != null ? currRow.getAttribute("Attribute1").toString() : "";
                        String strAttribute2 = currRow.getAttribute("Attribute2")  != null ? currRow.getAttribute("Attribute2").toString() : "";
                        String strAttribute3 = currRow.getAttribute("Attribute3")  != null ? currRow.getAttribute("Attribute3").toString() : "";
                        String strAttribute4 = currRow.getAttribute("Attribute4")  != null ? currRow.getAttribute("Attribute4").toString() : "";
                        String strAttribute5 = currRow.getAttribute("Attribute5")  != null ? currRow.getAttribute("Attribute5").toString() : "";


                        Row trRow = actTrVO.createRow();
                        actTrVO.insertRow(trRow);
                        trRow.setNewRowState(Row.STATUS_INITIALIZED);

                        trRow.setAttribute("SequenceNo", strSequenceNo);
                        trRow.setAttribute("Activity", strActivity);
                        // System.out.println("activity selected:" + strSelected);
                        trRow.setAttribute("Selected", strSelected);
                        trRow.setAttribute("Attribute1", strAttribute1);
                        trRow.setAttribute("Attribute2", strAttribute2);
                        trRow.setAttribute("Attribute3", strAttribute3);
                        trRow.setAttribute("Attribute4", strAttribute4);
                        trRow.setAttribute("Attribute5", strAttribute5);


                    }
                }

                if(actVO.getRowCount() >= 1){
                    LoadExistActivitiesInTable(actTrVO);
                }else{
                    LoadNewActivitiesInTable();
                }

                /*Start copy - Address*/
                 XxupPerPSInstAddrEOVOImpl addrVO = 
                    getXxupPerPSInstAddrEOVO1();   

                addrVO.reset();

                XxupPerPSInstAddrTrEOVOImpl addrTrVO =
                    getXxupPerPSInstAddrTrEOVO1();

                addrTrVO.setMaxFetchSize(0);
                addrTrVO.executeQuery();

                if(addrVO != null){
                    addrVO.initExistingPS(paramSequenceNo);
                    
                    while(addrVO.hasNext()){
                        XxupPerPSInstAddrEOVORowImpl currRow = (XxupPerPSInstAddrEOVORowImpl)
                            addrVO.next();

                        String strSequenceNo = currRow.getAttribute("SequenceNo")  != null ? currRow.getAttribute("SequenceNo").toString() : "";
                        String strAddress = currRow.getAttribute("Address") != null ? currRow.getAttribute("Address").toString() : "";
                        // String strSpecifics = currRow.getAttribute("Specifics") != null  ? currRow.getAttribute("Specifics").toString() : "";
                        String strAttribute1 = currRow.getAttribute("Attribute1")  != null ? currRow.getAttribute("Attribute1").toString() : "";
                        String strAttribute2 = currRow.getAttribute("Attribute2")  != null ? currRow.getAttribute("Attribute2").toString() : "";
                        String strAttribute3 = currRow.getAttribute("Attribute3")  != null ? currRow.getAttribute("Attribute3").toString() : "";
                        String strAttribute4 = currRow.getAttribute("Attribute4")  != null ? currRow.getAttribute("Attribute4").toString() : "";
                        String strAttribute5 = currRow.getAttribute("Attribute5")  != null ? currRow.getAttribute("Attribute5").toString() : "";


                        Row trRow = addrTrVO.createRow();
                        addrTrVO.insertRow(trRow);
                        trRow.setNewRowState(Row.STATUS_INITIALIZED);

//                       trRow.setAttribute("SequenceNo", seqNo);
                        trRow.setAttribute("SequenceNo", strSequenceNo);
                        trRow.setAttribute("Address", strAddress);
                        // trRow.setAttribute("Specifics", strSpecifics);
                        trRow.setAttribute("Attribute1", strAttribute1);
                        trRow.setAttribute("Attribute2", strAttribute2);
                        trRow.setAttribute("Attribute3", strAttribute3);
                        trRow.setAttribute("Attribute4", strAttribute4);
                        trRow.setAttribute("Attribute5", strAttribute5);


                    }
                }

                if(addrVO.getRowCount() < 1){
                    addrTrVO.initNewRecord();
                }


                /*Start copy - Benef Org*/
                 XxupPerPSInstBenefOrgEOVOImpl benefOrgVO = 
                    getXxupPerPSInstBenefOrgEOVO1();   

                benefOrgVO.reset();

                XxupPerPSInstBenefOrgTrEOVOImpl benefOrgTrVO =
                    getXxupPerPSInstBenefOrgTrEOVO1();

                benefOrgTrVO.setMaxFetchSize(0);
                benefOrgTrVO.executeQuery();

                if(benefOrgVO != null){
                    benefOrgVO.initExistingPS(paramSequenceNo);
                    
                    while(benefOrgVO.hasNext()){
                        XxupPerPSInstBenefOrgEOVORowImpl currRow = (XxupPerPSInstBenefOrgEOVORowImpl)
                            benefOrgVO.next();

                        String strSequenceNo = currRow.getAttribute("SequenceNo")  != null ? currRow.getAttribute("SequenceNo").toString() : "";
                        String strBeneficiaryOrganization = currRow.getAttribute("BeneficiaryOrganization") != null ? currRow.getAttribute("BeneficiaryOrganization").toString() : "";
                        String strContactDetails = currRow.getAttribute("ContactDetails") != null  ? currRow.getAttribute("ContactDetails").toString() : "";
                        String strAttribute1 = currRow.getAttribute("Attribute1")  != null ? currRow.getAttribute("Attribute1").toString() : "";
                        String strAttribute2 = currRow.getAttribute("Attribute2")  != null ? currRow.getAttribute("Attribute2").toString() : "";
                        String strAttribute3 = currRow.getAttribute("Attribute3")  != null ? currRow.getAttribute("Attribute3").toString() : "";
                        String strAttribute4 = currRow.getAttribute("Attribute4")  != null ? currRow.getAttribute("Attribute4").toString() : "";
                        String strAttribute5 = currRow.getAttribute("Attribute5")  != null ? currRow.getAttribute("Attribute5").toString() : "";


                        Row trRow = benefOrgTrVO.createRow();
                        benefOrgTrVO.insertRow(trRow);
                        trRow.setNewRowState(Row.STATUS_INITIALIZED);

                        trRow.setAttribute("SequenceNo", strSequenceNo);
                        trRow.setAttribute("BeneficiaryOrganization", strBeneficiaryOrganization);
                        trRow.setAttribute("ContactDetails", strContactDetails);
                        trRow.setAttribute("Attribute1", strAttribute1);
                        trRow.setAttribute("Attribute2", strAttribute2);
                        trRow.setAttribute("Attribute3", strAttribute3);
                        trRow.setAttribute("Attribute4", strAttribute4);
                        trRow.setAttribute("Attribute5", strAttribute5);


                    }
                }

                /*Start copy - Benef Type*/
                 XxupPerPSInstBenefTypeEOVOImpl benefTypeVO = 
                    getXxupPerPSInstBenefTypeEOVO1();   

                benefTypeVO.reset();

                XxupPerPSInstBenefTypeTrEOVOImpl benefTypeTrVO =
                    getXxupPerPSInstBenefTypeTrEOVO1();

                benefTypeTrVO.setMaxFetchSize(0);
                benefTypeTrVO.executeQuery();

                if(benefTypeVO != null){
                    benefTypeVO.initExistingPS(paramSequenceNo);
                    
                    while(benefTypeVO.hasNext()){
                        XxupPerPSInstBenefTypeEOVORowImpl currRow = (XxupPerPSInstBenefTypeEOVORowImpl)
                            benefTypeVO.next();

                        String strSequenceNo = currRow.getAttribute("SequenceNo")  != null ? currRow.getAttribute("SequenceNo").toString() : "";
                        String strTypeOfBeneficiary = currRow.getAttribute("TypeOfBeneficiary") != null ? currRow.getAttribute("TypeOfBeneficiary").toString() : "";
                        String strSelected = currRow.getAttribute("Selected") != null  ? currRow.getAttribute("Selected").toString() : "";
                        String strAttribute1 = currRow.getAttribute("Attribute1")  != null ? currRow.getAttribute("Attribute1").toString() : "";
                        String strAttribute2 = currRow.getAttribute("Attribute2")  != null ? currRow.getAttribute("Attribute2").toString() : "";
                        String strAttribute3 = currRow.getAttribute("Attribute3")  != null ? currRow.getAttribute("Attribute3").toString() : "";
                        String strAttribute4 = currRow.getAttribute("Attribute4")  != null ? currRow.getAttribute("Attribute4").toString() : "";
                        String strAttribute5 = currRow.getAttribute("Attribute5")  != null ? currRow.getAttribute("Attribute5").toString() : "";


                        Row trRow = benefTypeTrVO.createRow();
                        benefTypeTrVO.insertRow(trRow);
                        trRow.setNewRowState(Row.STATUS_INITIALIZED);

                        trRow.setAttribute("SequenceNo", strSequenceNo);
                        trRow.setAttribute("TypeOfBeneficiary", strTypeOfBeneficiary);
                        trRow.setAttribute("Selected", strSelected);
                        trRow.setAttribute("Attribute1", strAttribute1);
                        trRow.setAttribute("Attribute2", strAttribute2);
                        trRow.setAttribute("Attribute3", strAttribute3);
                        trRow.setAttribute("Attribute4", strAttribute4);
                        trRow.setAttribute("Attribute5", strAttribute5);


                    }
                }


                if(benefTypeVO.getRowCount() >= 1){
                    LoadExistBenefTypeInTable(benefTypeTrVO);
                }else{
                    LoadNewBenefTypeInTable();
                }


                /*Start copy - Countries*/
                 XxupPerPSInstCountriesEOVOImpl couVO = 
                    getXxupPerPSInstCountriesEOVO1();

                couVO.reset();

                XxupPerPSInstCountriesTrEOVOImpl couTrVO =
                    getXxupPerPSInstCountriesTrEOVO1();

                couTrVO.setMaxFetchSize(0);
                couTrVO.executeQuery();

                if(couVO != null){
                    couVO.initExistingPS(paramSequenceNo);
                    
                    while(couVO.hasNext()){
                        XxupPerPSInstCountriesEOVORowImpl currRow = (XxupPerPSInstCountriesEOVORowImpl)
                            couVO.next();

                        String strSequenceNo = currRow.getAttribute("SequenceNo")  != null ? currRow.getAttribute("SequenceNo").toString() : "";
                        String strCountry = currRow.getAttribute("Country") != null ? currRow.getAttribute("Country").toString() : "";
                        // String strContactDetails = currRow.getAttribute("ContactDetails") != null  ? currRow.getAttribute("ContactDetails").toString() : "";
                        String strAttribute1 = currRow.getAttribute("Attribute1")  != null ? currRow.getAttribute("Attribute1").toString() : "";
                        String strAttribute2 = currRow.getAttribute("Attribute2")  != null ? currRow.getAttribute("Attribute2").toString() : "";
                        String strAttribute3 = currRow.getAttribute("Attribute3")  != null ? currRow.getAttribute("Attribute3").toString() : "";
                        String strAttribute4 = currRow.getAttribute("Attribute4")  != null ? currRow.getAttribute("Attribute4").toString() : "";
                        String strAttribute5 = currRow.getAttribute("Attribute5")  != null ? currRow.getAttribute("Attribute5").toString() : "";


                        Row trRow = couTrVO.createRow();
                        couTrVO.insertRow(trRow);
                        trRow.setNewRowState(Row.STATUS_INITIALIZED);

                        trRow.setAttribute("SequenceNo", strSequenceNo);
                        trRow.setAttribute("Country", strCountry);
                        // trRow.setAttribute("ContactDetails", strContactDetails);
                        trRow.setAttribute("Attribute1", strAttribute1);
                        trRow.setAttribute("Attribute2", strAttribute2);
                        trRow.setAttribute("Attribute3", strAttribute3);
                        trRow.setAttribute("Attribute4", strAttribute4);
                        trRow.setAttribute("Attribute5", strAttribute5);


                    }
                }

                if(couVO.getRowCount() < 1) {
                    couTrVO.initNewRecord();
                }


                /*Start copy - Delivery Mode*/
                 XxupPerPSInstDeliveryModeEOVOImpl delModeVO = 
                    getXxupPerPSInstDeliveryModeEOVO1();   

                delModeVO.reset();

                XxupPerPSInstDelModeTrEOVOImpl delModeTrVO =
                    getXxupPerPSInstDelModeTrEOVO1();

                delModeTrVO.setMaxFetchSize(0);
                delModeTrVO.executeQuery();

                if(delModeVO != null){
                    delModeVO.initExistingPS(paramSequenceNo);
                    
                    while(delModeVO.hasNext()){
                        XxupPerPSInstDeliveryModeEOVORowImpl currRow = (XxupPerPSInstDeliveryModeEOVORowImpl)
                            delModeVO.next();

                        String strSequenceNo = currRow.getAttribute("SequenceNo")  != null ? currRow.getAttribute("SequenceNo").toString() : "";
                        String strDeliveryMode = currRow.getAttribute("DeliveryMode") != null ? currRow.getAttribute("DeliveryMode").toString() : "";
                        String strSelected = currRow.getAttribute("Selected") != null  ? currRow.getAttribute("Selected").toString() : "";
                        String strAttribute1 = currRow.getAttribute("Attribute1")  != null ? currRow.getAttribute("Attribute1").toString() : "";
                        String strAttribute2 = currRow.getAttribute("Attribute2")  != null ? currRow.getAttribute("Attribute2").toString() : "";
                        String strAttribute3 = currRow.getAttribute("Attribute3")  != null ? currRow.getAttribute("Attribute3").toString() : "";
                        String strAttribute4 = currRow.getAttribute("Attribute4")  != null ? currRow.getAttribute("Attribute4").toString() : "";
                        String strAttribute5 = currRow.getAttribute("Attribute5")  != null ? currRow.getAttribute("Attribute5").toString() : "";


                        Row trRow = delModeTrVO.createRow();
                        delModeTrVO.insertRow(trRow);
                        trRow.setNewRowState(Row.STATUS_INITIALIZED);

                        trRow.setAttribute("SequenceNo", strSequenceNo);
                        trRow.setAttribute("DeliveryMode", strDeliveryMode);
                        trRow.setAttribute("Selected", strSelected);
                        trRow.setAttribute("Attribute1", strAttribute1);
                        trRow.setAttribute("Attribute2", strAttribute2);
                        trRow.setAttribute("Attribute3", strAttribute3);
                        trRow.setAttribute("Attribute4", strAttribute4);
                        trRow.setAttribute("Attribute5", strAttribute5);


                    }
                }


                if(delModeVO.getRowCount() >= 1){
                    LoadExistDeliveryModeInTable(delModeTrVO);
                }else{
                    LoadNewDeliveryModeInTable();
                }


                /*Start copy - Members*/
                 XxupPerPSInstMembersEOVOImpl membersVO = 
                    getXxupPerPSInstMembersEOVO1();   

                membersVO.reset();

                XxupPerPSInstMembersTrEOVOImpl membersTrVO =
                    getXxupPerPSInstMembersTrEOVO1();

                membersTrVO.setMaxFetchSize(0);
                membersTrVO.executeQuery();

                if(membersVO != null){
                    membersVO.initExistingPS(paramSequenceNo);
                    
                    while(membersVO.hasNext()){
                        XxupPerPSInstMembersEOVORowImpl currRow = (XxupPerPSInstMembersEOVORowImpl)
                            membersVO.next();

                        String strSequenceNo = currRow.getAttribute("SequenceNo")  != null ? currRow.getAttribute("SequenceNo").toString() : "";
                        String strFullName = currRow.getAttribute("FullName") != null ? currRow.getAttribute("FullName").toString() : "";
                        String strPosition = currRow.getAttribute("Position") != null  ? currRow.getAttribute("Position").toString() : "";
                        String strOrganization = currRow.getAttribute("Organization") != null ? currRow.getAttribute("Organization").toString() : "";
                        String strProjectRole = currRow.getAttribute("ProjectRole") != null ? currRow.getAttribute("ProjectRole").toString() : "";
                        String strAttribute1 = currRow.getAttribute("Attribute1")  != null ? currRow.getAttribute("Attribute1").toString() : "";
                        String strAttribute2 = currRow.getAttribute("Attribute2")  != null ? currRow.getAttribute("Attribute2").toString() : "";
                        String strAttribute3 = currRow.getAttribute("Attribute3")  != null ? currRow.getAttribute("Attribute3").toString() : "";
                        String strAttribute4 = currRow.getAttribute("Attribute4")  != null ? currRow.getAttribute("Attribute4").toString() : "";
                        String strAttribute5 = currRow.getAttribute("Attribute5")  != null ? currRow.getAttribute("Attribute5").toString() : "";


                        Row trRow = membersTrVO.createRow();
                        membersTrVO.insertRow(trRow);
                        trRow.setNewRowState(Row.STATUS_INITIALIZED);

                        trRow.setAttribute("SequenceNo", strSequenceNo);
                        trRow.setAttribute("FullName", strFullName);
                        trRow.setAttribute("Position", strPosition);
                        trRow.setAttribute("Organization", strOrganization);
                        trRow.setAttribute("ProjectRole", strProjectRole);
                        trRow.setAttribute("Attribute1", strAttribute1);
                        trRow.setAttribute("Attribute2", strAttribute2);
                        trRow.setAttribute("Attribute3", strAttribute3);
                        trRow.setAttribute("Attribute4", strAttribute4);
                        trRow.setAttribute("Attribute5", strAttribute5);


                    }
                }


                /*Start copy - Other Members*/
                 XxupPerPSInstOtherMembersVOImpl otherMembersVO = 
                    getXxupPerPSInstOtherMembersVO1();   

                otherMembersVO.reset();

                XxupPerPSInstOtherMembersTrEOVOImpl otherMembersTrVO =
                    getXxupPerPSInstOtherMembersTrEOVO1();

                otherMembersTrVO.setMaxFetchSize(0);
                otherMembersTrVO.executeQuery();

                if(otherMembersVO != null){
                    otherMembersVO.initExistingPS(paramSequenceNo);
                    
                    while(otherMembersVO.hasNext()){
                        XxupPerPSInstOtherMembersVORowImpl currRow = (XxupPerPSInstOtherMembersVORowImpl)
                            otherMembersVO.next();

                        String strSequenceNo = currRow.getAttribute("SequenceNo")  != null ? currRow.getAttribute("SequenceNo").toString() : "";
                        String strFullName = currRow.getAttribute("FullName") != null ? currRow.getAttribute("FullName").toString() : "";
                        String strPosition = currRow.getAttribute("Position") != null  ? currRow.getAttribute("Position").toString() : "";
                        String strOrganization = currRow.getAttribute("Organization") != null ? currRow.getAttribute("Organization").toString() : "";
                        String strProjectRole = currRow.getAttribute("ProjectRole") != null ? currRow.getAttribute("ProjectRole").toString() : "";
//                        String strAttribute1 = currRow.getAttribute("Attribute1")  != null ? currRow.getAttribute("Attribute1").toString() : "";
//                        String strAttribute2 = currRow.getAttribute("Attribute2")  != null ? currRow.getAttribute("Attribute2").toString() : "";
//                        String strAttribute3 = currRow.getAttribute("Attribute3")  != null ? currRow.getAttribute("Attribute3").toString() : "";
//                        String strAttribute4 = currRow.getAttribute("Attribute4")  != null ? currRow.getAttribute("Attribute4").toString() : "";
//                        String strAttribute5 = currRow.getAttribute("Attribute5")  != null ? currRow.getAttribute("Attribute5").toString() : "";


                        Row trRow = otherMembersTrVO.createRow();
                        otherMembersTrVO.insertRow(trRow);
                        trRow.setNewRowState(Row.STATUS_INITIALIZED);

                        trRow.setAttribute("SequenceNo", strSequenceNo);
                        trRow.setAttribute("FullName", strFullName);
                        trRow.setAttribute("Position", strPosition);
                        trRow.setAttribute("Organization", strOrganization);
                        trRow.setAttribute("ProjectRole", strProjectRole);
//                        trRow.setAttribute("Attribute1", strAttribute1);
//                        trRow.setAttribute("Attribute2", strAttribute2);
//                        trRow.setAttribute("Attribute3", strAttribute3);
//                        trRow.setAttribute("Attribute4", strAttribute4);
//                        trRow.setAttribute("Attribute5", strAttribute5);


                    }
                }

                if(otherMembersVO.getRowCount() < 1){
                    otherMembersTrVO.initNewRecord();
                }

                

                /*Start copy - Obj Cat*/
                 XxupPerPSInstObjCatEOVOImpl objCatVO = 
                    getXxupPerPSInstObjCatEOVO1();   

                objCatVO.reset();

                XxupPerPSInstObjCatTrEOVOImpl objCatTrVO =
                    getXxupPerPSInstObjCatTrEOVO1();

                objCatTrVO.setMaxFetchSize(0);
                objCatTrVO.executeQuery();

                if(objCatVO != null){
                    objCatVO.initExistingPS(paramSequenceNo);
                    
                    while(objCatVO.hasNext()){
                        XxupPerPSInstObjCatEOVORowImpl currRow = (XxupPerPSInstObjCatEOVORowImpl)
                            objCatVO.next();

                        String strSequenceNo = currRow.getAttribute("SequenceNo")  != null ? currRow.getAttribute("SequenceNo").toString() : "";
                        String strObjectiveCategory = currRow.getAttribute("ObjectiveCategory") != null ? currRow.getAttribute("ObjectiveCategory").toString() : "";
                        String strSpecifics = currRow.getAttribute("Specifics") != null  ? currRow.getAttribute("Specifics").toString() : "";
                        String strAttribute1 = currRow.getAttribute("Attribute1")  != null ? currRow.getAttribute("Attribute1").toString() : "";
                        String strAttribute2 = currRow.getAttribute("Attribute2")  != null ? currRow.getAttribute("Attribute2").toString() : "";
                        String strAttribute3 = currRow.getAttribute("Attribute3")  != null ? currRow.getAttribute("Attribute3").toString() : "";
                        String strAttribute4 = currRow.getAttribute("Attribute4")  != null ? currRow.getAttribute("Attribute4").toString() : "";
                        String strAttribute5 = currRow.getAttribute("Attribute5")  != null ? currRow.getAttribute("Attribute5").toString() : "";


                        Row trRow = objCatTrVO.createRow();
                        objCatTrVO.insertRow(trRow);
                        trRow.setNewRowState(Row.STATUS_INITIALIZED);

                        trRow.setAttribute("SequenceNo", strSequenceNo);
                        trRow.setAttribute("ObjectiveCategory", strObjectiveCategory);
                        trRow.setAttribute("Specifics", strSpecifics);
                        trRow.setAttribute("Attribute1", strAttribute1);
                        trRow.setAttribute("Attribute2", strAttribute2);
                        trRow.setAttribute("Attribute3", strAttribute3);
                        trRow.setAttribute("Attribute4", strAttribute4);
                        trRow.setAttribute("Attribute5", strAttribute5);


                    }
                }
                
                



                /*Start copy - Office*/
                 XxupPerPSInstOfficeEOVOImpl officeVO = 
                    getXxupPerPSInstOfficeEOVO1();   

                officeVO.reset();

                XxupPerPSInstOfficeTrEOVOImpl officeTrVO =
                    getXxupPerPSInstOfficeTrEOVO1();

                officeTrVO.setMaxFetchSize(0);
                officeTrVO.executeQuery();

                if(officeVO != null){
                    officeVO.initExistingPS(paramSequenceNo);
                    
                    while(officeVO.hasNext()){
                        XxupPerPSInstOfficeEOVORowImpl currRow = (XxupPerPSInstOfficeEOVORowImpl)
                            officeVO.next();

                        String strSequenceNo = currRow.getAttribute("SequenceNo")  != null ? currRow.getAttribute("SequenceNo").toString() : "";
                        String strOffice = currRow.getAttribute("Office") != null ? currRow.getAttribute("Office").toString() : "";
                        String strTelNo = currRow.getAttribute("TelNo") != null  ? currRow.getAttribute("TelNo").toString() : "";
                        String strEmailAddress = currRow.getAttribute("EmailAddress") != null  ? currRow.getAttribute("EmailAddress").toString() : "";
                        String strAttribute1 = currRow.getAttribute("Attribute1")  != null ? currRow.getAttribute("Attribute1").toString() : "";
                        String strAttribute2 = currRow.getAttribute("Attribute2")  != null ? currRow.getAttribute("Attribute2").toString() : "";
                        String strAttribute3 = currRow.getAttribute("Attribute3")  != null ? currRow.getAttribute("Attribute3").toString() : "";
                        String strAttribute4 = currRow.getAttribute("Attribute4")  != null ? currRow.getAttribute("Attribute4").toString() : "";
                        String strAttribute5 = currRow.getAttribute("Attribute5")  != null ? currRow.getAttribute("Attribute5").toString() : "";


                        Row trRow = officeTrVO.createRow();
                        officeTrVO.insertRow(trRow);
                        trRow.setNewRowState(Row.STATUS_INITIALIZED);

                        trRow.setAttribute("SequenceNo", strSequenceNo);
                        trRow.setAttribute("Office", strOffice);
                        trRow.setAttribute("TelNo", strTelNo);
                        trRow.setAttribute("EmailAddress", strEmailAddress);
                        trRow.setAttribute("Attribute1", strAttribute1);
                        trRow.setAttribute("Attribute2", strAttribute2);
                        trRow.setAttribute("Attribute3", strAttribute3);
                        trRow.setAttribute("Attribute4", strAttribute4);
                        trRow.setAttribute("Attribute5", strAttribute5);


                    }
                }



                /*Start copy - Partner Org*/
                 XxupPerPSInstPartOrgEOVOImpl partnerOrgVO = 
                    getXxupPerPSInstPartOrgEOVO1();   

                partnerOrgVO.reset();

                XxupPerPSInstPartOrgTrEOVOImpl partnerOrgTrVO =
                    getXxupPerPSInstPartOrgTrEOVO1();

                partnerOrgTrVO.setMaxFetchSize(0);
                partnerOrgTrVO.executeQuery();

                if(partnerOrgVO != null){
                    partnerOrgVO.initExistingPS(paramSequenceNo);
                    
                    while(partnerOrgVO.hasNext()){
                        XxupPerPSInstPartOrgEOVORowImpl currRow = (XxupPerPSInstPartOrgEOVORowImpl)
                            partnerOrgVO.next();

                        String strSequenceNo = currRow.getAttribute("SequenceNo")  != null ? currRow.getAttribute("SequenceNo").toString() : "";
                        String strOrganizationName = currRow.getAttribute("OrganizationName") != null ? currRow.getAttribute("OrganizationName").toString() : "";
                        String strLocation = currRow.getAttribute("Location") != null  ? currRow.getAttribute("Location").toString() : "";
                        String strAttribute1 = currRow.getAttribute("Attribute1")  != null ? currRow.getAttribute("Attribute1").toString() : "";
                        String strAttribute2 = currRow.getAttribute("Attribute2")  != null ? currRow.getAttribute("Attribute2").toString() : "";
                        String strAttribute3 = currRow.getAttribute("Attribute3")  != null ? currRow.getAttribute("Attribute3").toString() : "";
                        String strAttribute4 = currRow.getAttribute("Attribute4")  != null ? currRow.getAttribute("Attribute4").toString() : "";
                        String strAttribute5 = currRow.getAttribute("Attribute5")  != null ? currRow.getAttribute("Attribute5").toString() : "";


                        Row trRow = partnerOrgTrVO.createRow();
                        partnerOrgTrVO.insertRow(trRow);
                        trRow.setNewRowState(Row.STATUS_INITIALIZED);

                        trRow.setAttribute("SequenceNo", strSequenceNo);
                        trRow.setAttribute("OrganizationName", strOrganizationName);
                        trRow.setAttribute("Location", strLocation);
                        trRow.setAttribute("Attribute1", strAttribute1);
                        trRow.setAttribute("Attribute2", strAttribute2);
                        trRow.setAttribute("Attribute3", strAttribute3);
                        trRow.setAttribute("Attribute4", strAttribute4);
                        trRow.setAttribute("Attribute5", strAttribute5);


                    }
                }

                if(partnerOrgVO.getRowCount() < 1){
                    partnerOrgTrVO.initNewRecord();
                }


                /*Start copy - Subj Area*/
                 XxupPerPSInstSubjEOVOImpl subjVO = 
                    getXxupPerPSInstSubjEOVO1();   

                subjVO.reset();

                XxupPerPSInstSubjTrEOVOImpl subjTrVO =
                    getXxupPerPSInstSubjTrEOVO1();

                subjTrVO.setMaxFetchSize(0);
                subjTrVO.executeQuery();

                if(subjVO != null){
                    subjVO.initExistingPS(paramSequenceNo);
                    
                    while(subjVO.hasNext()){
                        XxupPerPSInstSubjEOVORowImpl currRow = (XxupPerPSInstSubjEOVORowImpl)
                            subjVO.next();

                        String strSequenceNo = currRow.getAttribute("SequenceNo")  != null ? currRow.getAttribute("SequenceNo").toString() : "";
                        String strSubjectAreaInterest = currRow.getAttribute("SubjectAreaInterest") != null ? currRow.getAttribute("SubjectAreaInterest").toString() : "";
                        String strSubjAreaSelected = currRow.getAttribute("Selected") != null  ? currRow.getAttribute("Selected").toString() : "";
                        String strAttribute1 = currRow.getAttribute("Attribute1")  != null ? currRow.getAttribute("Attribute1").toString() : "";
                        String strAttribute2 = currRow.getAttribute("Attribute2")  != null ? currRow.getAttribute("Attribute2").toString() : "";
                        String strAttribute3 = currRow.getAttribute("Attribute3")  != null ? currRow.getAttribute("Attribute3").toString() : "";
                        String strAttribute4 = currRow.getAttribute("Attribute4")  != null ? currRow.getAttribute("Attribute4").toString() : "";
                        String strAttribute5 = currRow.getAttribute("Attribute5")  != null ? currRow.getAttribute("Attribute5").toString() : "";


                        Row trRow = subjTrVO.createRow();
                        subjTrVO.insertRow(trRow);
                        trRow.setNewRowState(Row.STATUS_INITIALIZED);

                        trRow.setAttribute("SequenceNo", strSequenceNo);
                        trRow.setAttribute("SubjectAreaInterest", strSubjectAreaInterest);
                        trRow.setAttribute("Selected", strSubjAreaSelected);
                        trRow.setAttribute("Attribute1", strAttribute1);
                        trRow.setAttribute("Attribute2", strAttribute2);
                        trRow.setAttribute("Attribute3", strAttribute3);
                        trRow.setAttribute("Attribute4", strAttribute4);
                        trRow.setAttribute("Attribute5", strAttribute5);


                    }
                }


                if(subjVO.getRowCount() >= 1){
                    LoadExistSubjectAreaOfInterestTable(subjTrVO);
                }else{
                    LoadNewSubjectAreaOfInterestInTable();
                }



                /*Start copy - Type of Activity*/
                 XxupPerPSInstToaEOVOImpl toaVO = 
                    getXxupPerPSInstToaEOVO1();   


                toaVO.reset();

                XxupPerPSInstToaTrEOVOImpl toaTrVO =
                    getXxupPerPSInstToaTrEOVO1();

                toaTrVO.setMaxFetchSize(0);
                toaTrVO.executeQuery();

                if(toaVO != null){
                    toaVO.initExistingPS(paramSequenceNo);
                    
                    while(toaVO.hasNext()){
                        XxupPerPSInstToaEOVORowImpl currRow = (XxupPerPSInstToaEOVORowImpl)
                            toaVO.next();

                        String strSequenceNo = currRow.getAttribute("SequenceNo")  != null ? currRow.getAttribute("SequenceNo").toString() : "";
                        String strTypeOfActivity = currRow.getAttribute("TypeOfActivity") != null ? currRow.getAttribute("TypeOfActivity").toString() : "";
                        // String strSubjAreaSelected = currRow.getAttribute("Selected") != null  ? currRow.getAttribute("Selected").toString() : "";
                        String strAttribute1 = currRow.getAttribute("Attribute1")  != null ? currRow.getAttribute("Attribute1").toString() : "";
                        String strAttribute2 = currRow.getAttribute("Attribute2")  != null ? currRow.getAttribute("Attribute2").toString() : "";
                        String strAttribute3 = currRow.getAttribute("Attribute3")  != null ? currRow.getAttribute("Attribute3").toString() : "";
                        String strAttribute4 = currRow.getAttribute("Attribute4")  != null ? currRow.getAttribute("Attribute4").toString() : "";
                        String strAttribute5 = currRow.getAttribute("Attribute5")  != null ? currRow.getAttribute("Attribute5").toString() : "";


                        Row trRow = toaTrVO.createRow();
                        toaTrVO.insertRow(trRow);
                        trRow.setNewRowState(Row.STATUS_INITIALIZED);

                        trRow.setAttribute("SequenceNo", strSequenceNo);
                        trRow.setAttribute("TypeOfActivity", strTypeOfActivity);
                        // trRow.setAttribute("Selected", strSubjAreaSelected);
                        trRow.setAttribute("Attribute1", strAttribute1);
                        trRow.setAttribute("Attribute2", strAttribute2);
                        trRow.setAttribute("Attribute3", strAttribute3);
                        trRow.setAttribute("Attribute4", strAttribute4);
                        trRow.setAttribute("Attribute5", strAttribute5);


                    }
                }

                if(toaVO.getRowCount() < 1) {
                    toaTrVO.initNewRecord();
                }


             }

        }catch (Exception ex) {
                throw OAException.wrapperException(ex);
        }

    }

    public void viewDetails(String paramSequenceNo){
            System.out.println(paramSequenceNo);

            XxupPerPSInstitutionalEOVOImpl mainVO = getXxupPerPSInstitutionalEOVO1();
            mainVO.initExistingPS(paramSequenceNo);

            XxupPerPSInstAddrEOVOImpl addrVO = getXxupPerPSInstAddrEOVO1();
            addrVO.initExistingPS(paramSequenceNo);

            XxupPerPSInstBenefOrgEOVOImpl benefOrgVO = 
                getXxupPerPSInstBenefOrgEOVO1();
            benefOrgVO.initExistingPS(paramSequenceNo);

            XxupPerPSInstBenefTypeEOVOImpl benefTypeVO = 
                getXxupPerPSInstBenefTypeEOVO1();
            benefTypeVO.initExistingPS(paramSequenceNo);

            XxupPerPSInstDeliveryModeEOVOImpl delModeVO = 
                getXxupPerPSInstDeliveryModeEOVO1();
            delModeVO.initExistingPS(paramSequenceNo);

            XxupPerPSInstMembersEOVOImpl membersVO = 
                getXxupPerPSInstMembersEOVO1();
            membersVO.initExistingPS(paramSequenceNo);

            XxupPerPSInstObjCatEOVOImpl objCatVO = 
                getXxupPerPSInstObjCatEOVO1();
            objCatVO.initExistingPS(paramSequenceNo);

            XxupPerPSInstOfficeEOVOImpl officeVO = 
                getXxupPerPSInstOfficeEOVO1();
            officeVO.initExistingPS(paramSequenceNo);

           XxupPerPSInstPartOrgTrEOVOImpl partnerOrgVO = 
               getXxupPerPSInstPartOrgTrEOVO1();
           partnerOrgVO.initExistingPS(paramSequenceNo);

            XxupPerPSInstSubjEOVOImpl subjVO = getXxupPerPSInstSubjEOVO1();
            subjVO.initExistingPS(paramSequenceNo);
            
            XxupPerPSInstActivitiesEOVOImpl actVO = getXxupPerPSInstActivitiesEOVO1();
            actVO.initExistingPS(paramSequenceNo);


            XxupPerPSInstCountriesEOVOImpl couVO = 
                getXxupPerPSInstCountriesEOVO1();
            couVO.initExistingPS(paramSequenceNo);

            
            XxupPerPSInstToaEOVOImpl toaVO =
                getXxupPerPSInstToaEOVO1();
            toaVO.initExistingPS(paramSequenceNo);

    }



    /**Container's getter for XxupPerPSInstSubjEOVO1
     */
    public XxupPerPSInstSubjEOVOImpl getXxupPerPSInstSubjEOVO1() {
        return (XxupPerPSInstSubjEOVOImpl)findViewObject("XxupPerPSInstSubjEOVO1");
    }

    /**Container's getter for PerPSSubjectAreaInterestVO1
     */
    public PerPSSubjectAreaInterestVOImpl getPerPSSubjectAreaInterestVO1() {
        return (PerPSSubjectAreaInterestVOImpl)findViewObject("PerPSSubjectAreaInterestVO1");
    }


    /**Container's getter for XxupPerPSInstAddrEOVO1
     */
    public XxupPerPSInstAddrEOVOImpl getXxupPerPSInstAddrEOVO1() {
        return (XxupPerPSInstAddrEOVOImpl)findViewObject("XxupPerPSInstAddrEOVO1");
    }

    /**Container's getter for PerPSCountryVO1
     */
    public PerPSCountryVOImpl getPerPSCountryVO1() {
        return (PerPSCountryVOImpl)findViewObject("PerPSCountryVO1");
    }

    /**Container's getter for PerPSActionHistoryVO1
     */
    public PerPSActionHistoryVOImpl getPerPSActionHistoryVO1() {
        return (PerPSActionHistoryVOImpl)findViewObject("PerPSActionHistoryVO1");
    }


    /**Container's getter for XxupPerPSInstOfficeEOVO1
     */
    public XxupPerPSInstOfficeEOVOImpl getXxupPerPSInstOfficeEOVO1() {
        return (XxupPerPSInstOfficeEOVOImpl)findViewObject("XxupPerPSInstOfficeEOVO1");
    }


    /**Container's getter for XxupPerPSInstMembersEOVO1
     */
    public XxupPerPSInstMembersEOVOImpl getXxupPerPSInstMembersEOVO1() {
        return (XxupPerPSInstMembersEOVOImpl)findViewObject("XxupPerPSInstMembersEOVO1");
    }


    /**Container's getter for XxupPerPSInstDeliveryModeEOVO1
     */
    public XxupPerPSInstDeliveryModeEOVOImpl getXxupPerPSInstDeliveryModeEOVO1() {
        return (XxupPerPSInstDeliveryModeEOVOImpl)findViewObject("XxupPerPSInstDeliveryModeEOVO1");
    }

    /**Container's getter for PerPSInstDeliveryModeVO1
     */
    public PerPSInstDeliveryModeVOImpl getPerPSInstDeliveryModeVO1() {
        return (PerPSInstDeliveryModeVOImpl)findViewObject("PerPSInstDeliveryModeVO1");
    }

    /**Container's getter for PerPSAddressVO1
     */
    public PerPSAddressVOImpl getPerPSAddressVO1() {
        return (PerPSAddressVOImpl)findViewObject("PerPSAddressVO1");
    }

    /**Container's getter for XxupPerPSInstBenefTypeEOVO1
     */
    public XxupPerPSInstBenefTypeEOVOImpl getXxupPerPSInstBenefTypeEOVO1() {
        return (XxupPerPSInstBenefTypeEOVOImpl)findViewObject("XxupPerPSInstBenefTypeEOVO1");
    }

    /**Container's getter for PerPSBeneficiaryTypeVO1
     */
    public PerPSBeneficiaryTypeVOImpl getPerPSBeneficiaryTypeVO1() {
        return (PerPSBeneficiaryTypeVOImpl)findViewObject("PerPSBeneficiaryTypeVO1");
    }

    /**Container's getter for XxupPerPSInstBenefOrgEOVO1
     */
    public XxupPerPSInstBenefOrgEOVOImpl getXxupPerPSInstBenefOrgEOVO1() {
        return (XxupPerPSInstBenefOrgEOVOImpl)findViewObject("XxupPerPSInstBenefOrgEOVO1");
    }


    /**Container's getter for XxupPerPSInstitutionalEOVO1
     */
    public XxupPerPSInstitutionalEOVOImpl getXxupPerPSInstitutionalEOVO1() {
        return (XxupPerPSInstitutionalEOVOImpl)findViewObject("XxupPerPSInstitutionalEOVO1");
    }


    /**Container's getter for PerPSInstActivitiesVO1
     */
    public PerPSInstActivitiesVOImpl getPerPSInstActivitiesVO1() {
        return (PerPSInstActivitiesVOImpl)findViewObject("PerPSInstActivitiesVO1");
    }

    /**Container's getter for XxupPerPSInstActivitiesEOVO1
     */
    public XxupPerPSInstActivitiesEOVOImpl getXxupPerPSInstActivitiesEOVO1() {
        return (XxupPerPSInstActivitiesEOVOImpl)findViewObject("XxupPerPSInstActivitiesEOVO1");
    }

    /**Container's getter for PerPSInstAdminSummaryVO1
     */
    public PerPSInstAdminSummaryVOImpl getPerPSInstAdminSummaryVO1() {
        return (PerPSInstAdminSummaryVOImpl)findViewObject("PerPSInstAdminSummaryVO1");
    }

    /**Container's getter for XxupPerPSInstPartOrgEOVO1
     */
    public XxupPerPSInstPartOrgEOVOImpl getXxupPerPSInstPartOrgEOVO1() {
        return (XxupPerPSInstPartOrgEOVOImpl)findViewObject("XxupPerPSInstPartOrgEOVO1");
    }

    /**Container's getter for XxupPerPSInstActTrEOVO1
     */
    public XxupPerPSInstActTrEOVOImpl getXxupPerPSInstActTrEOVO1() {
        return (XxupPerPSInstActTrEOVOImpl)findViewObject("XxupPerPSInstActTrEOVO1");
    }

    /**Container's getter for XxupPerPSInstAddrTrEOVO1
     */
    public XxupPerPSInstAddrTrEOVOImpl getXxupPerPSInstAddrTrEOVO1() {
        return (XxupPerPSInstAddrTrEOVOImpl)findViewObject("XxupPerPSInstAddrTrEOVO1");
    }

    /**Container's getter for XxupPerPSInstBenefOrgTrEOVO1
     */
    public XxupPerPSInstBenefOrgTrEOVOImpl getXxupPerPSInstBenefOrgTrEOVO1() {
        return (XxupPerPSInstBenefOrgTrEOVOImpl)findViewObject("XxupPerPSInstBenefOrgTrEOVO1");
    }

    /**Container's getter for XxupPerPSInstBenefTypeTrEOVO1
     */
    public XxupPerPSInstBenefTypeTrEOVOImpl getXxupPerPSInstBenefTypeTrEOVO1() {
        return (XxupPerPSInstBenefTypeTrEOVOImpl)findViewObject("XxupPerPSInstBenefTypeTrEOVO1");
    }

    /**Container's getter for XxupPerPSInstCountriesTrEOVO1
     */
    public XxupPerPSInstCountriesTrEOVOImpl getXxupPerPSInstCountriesTrEOVO1() {
        return (XxupPerPSInstCountriesTrEOVOImpl)findViewObject("XxupPerPSInstCountriesTrEOVO1");
    }

    /**Container's getter for XxupPerPSInstDelModeTrEOVO1
     */
    public XxupPerPSInstDelModeTrEOVOImpl getXxupPerPSInstDelModeTrEOVO1() {
        return (XxupPerPSInstDelModeTrEOVOImpl)findViewObject("XxupPerPSInstDelModeTrEOVO1");
    }

    /**Container's getter for XxupPerPSInstMembersTrEOVO1
     */
    public XxupPerPSInstMembersTrEOVOImpl getXxupPerPSInstMembersTrEOVO1() {
        return (XxupPerPSInstMembersTrEOVOImpl)findViewObject("XxupPerPSInstMembersTrEOVO1");
    }

    /**Container's getter for XxupPerPSInstObjCatTrEOVO1
     */
    public XxupPerPSInstObjCatTrEOVOImpl getXxupPerPSInstObjCatTrEOVO1() {
        return (XxupPerPSInstObjCatTrEOVOImpl)findViewObject("XxupPerPSInstObjCatTrEOVO1");
    }

    /**Container's getter for XxupPerPSInstOfficeTrEOVO1
     */
    public XxupPerPSInstOfficeTrEOVOImpl getXxupPerPSInstOfficeTrEOVO1() {
        return (XxupPerPSInstOfficeTrEOVOImpl)findViewObject("XxupPerPSInstOfficeTrEOVO1");
    }

    /**Container's getter for XxupPerPSInstPartOrgTrEOVO1
     */
    public XxupPerPSInstPartOrgTrEOVOImpl getXxupPerPSInstPartOrgTrEOVO1() {
        return (XxupPerPSInstPartOrgTrEOVOImpl)findViewObject("XxupPerPSInstPartOrgTrEOVO1");
    }


    /**Container's getter for XxupPerPSInstToaTrEOVO1
     */
    public XxupPerPSInstToaTrEOVOImpl getXxupPerPSInstToaTrEOVO1() {
        return (XxupPerPSInstToaTrEOVOImpl)findViewObject("XxupPerPSInstToaTrEOVO1");
    }

    /**Container's getter for XxupPerPSCountriesEOVO1
     */
    public XxupPerPSCountriesEOVOImpl getXxupPerPSCountriesEOVO1() {
        return (XxupPerPSCountriesEOVOImpl)findViewObject("XxupPerPSCountriesEOVO1");
    }


    /**Container's getter for XxupPerPSInstSubjTrEOVO1
     */
    public XxupPerPSInstSubjTrEOVOImpl getXxupPerPSInstSubjTrEOVO1() {
        return (XxupPerPSInstSubjTrEOVOImpl)findViewObject("XxupPerPSInstSubjTrEOVO1");
    }

    /**Container's getter for XxupPerPSInstOtherMembersTrEOVO1
     */
    public XxupPerPSInstOtherMembersTrEOVOImpl getXxupPerPSInstOtherMembersTrEOVO1() {
        return (XxupPerPSInstOtherMembersTrEOVOImpl)findViewObject("XxupPerPSInstOtherMembersTrEOVO1");
    }

    /**Container's getter for XxupPerPSInstOtherMembersVO1
     */
    public XxupPerPSInstOtherMembersVOImpl getXxupPerPSInstOtherMembersVO1() {
        return (XxupPerPSInstOtherMembersVOImpl)findViewObject("XxupPerPSInstOtherMembersVO1");
    }

    /**Container's getter for XxupPerPSInstToaEOVO1
     */
    public XxupPerPSInstToaEOVOImpl getXxupPerPSInstToaEOVO1() {
        return (XxupPerPSInstToaEOVOImpl)findViewObject("XxupPerPSInstToaEOVO1");
    }

    /**Container's getter for XxupPerPSInstCountriesEOVO1
     */
    public XxupPerPSInstCountriesEOVOImpl getXxupPerPSInstCountriesEOVO1() {
        return (XxupPerPSInstCountriesEOVOImpl)findViewObject("XxupPerPSInstCountriesEOVO1");
    }

    /**Container's getter for XxupPerPSInstTrEOVO1
     */
    public XxupPerPSInstTrEOVOImpl getXxupPerPSInstTrEOVO1() {
        return (XxupPerPSInstTrEOVOImpl)findViewObject("XxupPerPSInstTrEOVO1");
    }
}
